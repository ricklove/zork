// VOCABULARY, ACTION FUNCTIONS, MAZE (NORMALLY ENCODED)

define(BLO
  (Y)
  cond((type_q(,REP
        SUBR
        FSUBR);
      set(READ-TABLE
        put(ivector(256
            0);
          chtype(ascii(!\
              <>
              FIX);
            !\););
        evaltype(FORM
          SEGMENT);
        applytype(SUBR
          FIX);
        put(alltypes();
          6
          7(alltypes();););
        substitute(2
          1);
        off(.BH);
        ));
      >
      gdecl((FF)
        STRING);
      define(ILO
        (BODY
          TYPE
          NM1
          NM2
          "OPTIONAL"
          M1
          M2)
        #DECL
          ((BODY
              NM1
              NM2
              M1
              M2)
            STRING
            (TYPE)
            FIX)
        cond((eq_q(.TYPE
              *400000000000*);
            cond((or(and(member("<FLUSH-ME>"
                      .BODY);
                    not(member(,XUNM
                        ,WINNERS);););
                  and(member(.NM1
                      ,WINNERS);
                    member(,FF
                      .BODY);););
                eval(parse(.BODY););));));
        dismiss(T););
      // ROOM FUNCTIONS
      define(EAST-HOUSE
        ("AUX"
          (WIN
            ,WINNER)
          (PRSVEC
            ,PRSVEC)
          (PRSACT
            1(.PRSVEC);))
        #DECL
          ((PRSVEC)
            VECTOR
            (WIN)
            ADV
            (PRSACT)
            VERB)
        cond((eq_q(.PRSACT
              ,LOOK!-WORDS);
            tell("You are behind the white house.  In one corner of the house there is a small window which is "
              1
              cond((,KITCHEN-WINDOW!-FLAG
                  "open.")
                ("slightly ajar.")););)););
      // HACK THE KITCHEN WINDOW
      setg(GRUNLOCK!-FLAG
        <>);
      define(WINDOW-FUNCTION
        ("AUX"
          (PRSACT
            1(,PRSVEC);))
        #DECL
          ((PRSACT)
            VERB)
        open_close(.PRSACT
          KITCHEN-WINDOW!-FLAG
          "With great effort, you open the window far enough to allow entry."
          "The window closes (more easily than it opened)."););
      define(OPEN-CLOSE
        (VERB
          ATM
          STROPN
          STRCLS)
        #DECL
          ((VERB)
            VERB
            (ATM)
            ATOM
            (STROPN
              STRCLS)
            STRING)
        cond((eq_q(.VERB
              ,OPEN!-WORDS);
            cond((,.ATM
                tell(pick_one(,DUMMY););)
              (tell(.STROPN);
                setg(.ATM
                  T);));)
          (eq_q(.VERB
              ,CLOSE!-WORDS);
            cond((,.ATM
                tell(.STRCLS);
                setg(.ATM
                  <>);
                T)
              (tell(pick_one(,DUMMY););));)););
      // KITCHEN -- CHECK THE WINDOW
      define(KITCHEN
        ("AUX"
          (WIN
            ,WINNER)
          (PRSVEC
            ,PRSVEC)
          (PRSACT
            1(.PRSVEC);))
        #DECL
          ((PRSVEC)
            VECTOR
            (WIN)
            ADV
            (PRSACT)
            VERB)
        cond((eq_q(.PRSACT
              ,LOOK!-WORDS);
            tell("You are in the kitchen of the white house.  A table seems to have been used recently for the preparation of food.  A passage leads to the west and a dark staircase can be seen leading upward.  To the east is a small window which is "
              0);
            cond((,KITCHEN-WINDOW!-FLAG
                tell("open."
                  1);)
              (tell("slightly ajar."
                  1);));)
          (T)););
      define(LEAF-PILE
        ("AUX"
          (PV
            ,PRSVEC)
          (L
            2(.PV);))
        #DECL
          ((PV)
            vector([3
                ANY]);
            (L)
            OBJECT)
        cond((eq_q(1(.PV);
              ,BURN!-WORDS);
            put(.L
              ,ORAND
              1);
            cond((oroom(.L);
                tell("The leaves burn and the neighbors start to complain.");
                remove_object(.L);)
              (T
                drop_object(.L);
                jigs_up("The sight of someone carrying a pile of burning leaves so offends the neighbors that they come over and put you out.");));)
          (eq_q(1(.PV);
              ,MOVE!-WORDS);
            put(.L
              ,ORAND
              1);
            tell("Done.");)););
      psetg(RESDESC
        "However, with the water level lowered, there is merely a wide stream running through the center of the room.");
      psetg(GLADESC
        "You are in a large room, with giant icicles hanging from the walls and ceiling.  There are passages to the north and east.");
      define(GLACIER-ROOM
        ("AUX"
          (PRSACT
            1(,PRSVEC);))
        #DECL
          ((PRSACT)
            VERB)
        cond((eq_q(.PRSACT
              ,LOOK!-WORDS);
            cond((,GLACIER-FLAG!-FLAG
                tell(,GLADESC);
                tell("There is a large passageway leading westward."
                  1);)
              (tell(,GLADESC);));)););
      define(TROPHY-CASE
        ("AUX"
          (PRSACT
            1(,PRSVEC);))
        #DECL
          #DECL
            ((PRSACT)
              VERB)
        cond((eq_q(.PRSACT
              ,TAKE!-WORDS);
            tell("The trophy case is securely fastened to the wall (perhaps to foil any attempt by robbers to remove it).");)););
      define(GLACIER
        ("AUX"
          (PRSVEC
            ,PRSVEC)
          (PRSACT
            1(.PRSVEC);)
          T)
        #DECL
          ((PRSVEC)
            vector(VERB
              [2
                ANY]);
            (PRSACT)
            VERB
            (T)
            OBJECT)
        cond((eq_q(vname(.PRSACT);
              THROW!-WORDS);
            cond((eq_q(2(.PRSVEC);
                  set(T
                    find_obj("TORCH");););
                tell("The torch hits the glacier and explodes into a great ball of flame, devouring the glacier.  The water from the melting glacier rushes downstream, carrying the torch with it.  In the place of the glacier, there is a passageway leading west.");
                remove_object(find_obj("ICE"););
                remove_object(.T);
                insert_object(.T
                  find_room("STREA"););
                put(.T
                  ,ODESC2
                  "burned out ivory torch");
                put(.T
                  ,ODESC1
                  "There is a burned out ivory torch here.");
                put(.T
                  ,OLIGHT?
                  0);
                trz(.T
                  ,FLAMEBIT);
                or(lit_q(,HERE);
                  tell("The melting glacier seems to have carried the torch away, leaving you in the dark."););
                setg(GLACIER-FLAG!-FLAG
                  T);)
              (tell("The glacier is unmoved by your ridiculous attempt.");
                <>));)
          (eq_q(vname(.PRSACT);
              MELT!-WORDS);
            tell("How exactly are you going to melt this glacier?");)););
      psetg(YUKS
        '["Nice try."
            "You can't be serious."
            "Chomp, Chomp."
            "Not a prayer."
            "I don't think so."]);
      define(RESERVOIR-SOUTH
        ("AUX"
          (PRSACT
            1(,PRSVEC);))
        #DECL
          ((PRSACT)
            VERB)
        cond((eq_q(.PRSACT
              ,LOOK!-WORDS);
            cond((,LOW-TIDE!-FLAG
                tell("You are in the south end of a large cavernous room which was formerly a reservoir.");
                tell(,RESDESC
                  1);)
              (tell("You are at the south end of a large reservoir.");));
            tell("There is a western exit, a passageway south, and a steep pathway climbing up along the edge of a cliff."
              1);)););
      define(RESERVOIR-NORTH
        ("AUX"
          (PRSACT
            1(,PRSVEC);))
        #DECL
          ((PRSACT)
            VERB)
        cond((eq_q(.PRSACT
              ,LOOK!-WORDS);
            cond((,LOW-TIDE!-FLAG
                tell("You are in the north end of a large cavernous room which was formerly a reservoir.");
                tell(,RESDESC
                  1);)
              (tell("You are at the north end of a large reservoir.");));
            tell("There is a tunnel leaving the room to the north."
              1);)););
      // LIVING-ROOM -- FUNCTION TO ENTER THE DUNGEON FROM THE HOUSE
      define(LIVING-ROOM
        ("AUX"
          (WIN
            ,WINNER)
          (PRSVEC
            ,PRSVEC)
          RUG?
          (PRSACT
            1(.PRSVEC);)
          TC)
        #DECL
          ((PRSVEC)
            VECTOR
            (WIN)
            ADV
            (RUG?)
            or(ATOM
              FALSE);
            (PRSACT)
            VERB
            (TC)
            OBJECT)
        cond((eq_q(.PRSACT
              ,LOOK!-WORDS);
            cond((,MAGIC-FLAG!-FLAG
                tell("You are in the living room.  There is a door to the east.  To the west is a cyclops-shaped hole in an old wooden door, above which is some strange gothic lettering "
                  0);)
              (tell("You are in the living room.  There is a door to the east, a wooden door with strange gothic lettering to the west, which appears to be nailed shut, "
                  0);));
            set(RUG?
              orand(find_obj("RUG");););
            cond((and(.RUG?
                  ,TRAP-DOOR!-FLAG);
                tell("and a rug lying beside an open trap-door."
                  1);)
              (.RUG?
                tell("and a closed trap-door at your feet."
                  1);)
              (,TRAP-DOOR!-FLAG
                tell("and an open trap-door at your feet."
                  1);)
              (tell("and a large oriental rug in the center of the room."
                  1);));
            T)
          (and(set(TC
                find_obj("TCASE"););
              or(eq_q(.PRSACT
                  ,TAKE!-WORDS);
                and(eq_q(.PRSACT
                    ,PUT!-WORDS);
                  eq_q(3(.PRSVEC);
                    .TC););););
            put(,WINNER
              ,ASCORE
              _(,RAW-SCORE
                mapf(,+
                  ,OTVAL
                  ocontents(.TC););););)););
      define(TRAP-DOOR
        ("AUX"
          (PRSACT
            1(,PRSVEC);)
          (RM
            ,HERE))
        #DECL
          ((PRSACT)
            VERB
            (RM)
            ROOM)
        cond((eq_q(.RM
              find_room("LROOM"););
            cond((eq_q(.PRSACT
                  ,OPEN!-WORDS);
                cond((,TRAP-DOOR!-FLAG
                    tell("It's open.");)
                  (tell("The door reluctantly opens to reveal a rickety staircase descending into darkness.");));
                cond_open(DOWN!-DIRECTIONS
                  .RM);)
              (eq_q(.PRSACT
                  ,CLOSE!-WORDS);
                cond((,TRAP-DOOR!-FLAG
                    tell("The door swings shut and closes.");)
                  (tell("It's closed.");));
                cond_close(DOWN!-DIRECTIONS
                  .RM);
                T));)
          (eq_q(.RM
              find_room("CELLA"););
            cond((eq_q(.PRSACT
                  ,OPEN!-WORDS);
                tell("The door is locked from above.");)
              (tell(pick_one(,DUMMY););));)););
      define(LOOK-UNDER
        ("AUX"
          (OBJ
            2(,PRSVEC);))
        #DECL
          ((OBJ)
            OBJECT)
        cond((and(eq_q(.OBJ
                find_obj("RUG"););
              not(orand(.OBJ););
              not(,TRAP-DOOR!-FLAG););
            tell("Underneath the rug is a closed trap door.");)
          (and(eq_q(.OBJ
                find_obj("LEAVE"););
              neq_q(rvars(find_room("CLEAR"););
                1););
            tell("Underneath the pile of leaves is a grating.");)););
      define(REPENT
        ()
        tell("It could very well be too late!"););
      define(CLEARING
        ("AUX"
          (PRSACT
            1(,PRSVEC);)
          (RM
            ,HERE)
          (GRATE
            find_obj("GRAT1");)
          (LEAVES
            find_obj("LEAVE");)
          (RV
            rvars(.RM);))
        #DECL
          ((PRSACT)
            VERB
            (RM)
            ROOM
            (LEAVES
              GRATE)
            OBJECT
            (RV)
            FIX)
        cond((eq_q(.PRSACT
              ,LOOK!-WORDS);
            tell("You are in a clearing, with a forest surrounding you on the west and south.");
            cond((,KEY-FLAG!-FLAG
                tell("There is an open grating, descending into darkness."
                  1);)
              (not(0_q(.RV););
                tell("There is a grating securely fastened into the ground."
                  1);));)
          (and(0_q(.RV);
              or(and(eq_q(.PRSACT
                    ,BURN!-WORDS);
                  not(0_q(orand(.LEAVES););););
                eq_q(.PRSACT
                  ,TAKE!-WORDS);
                eq_q(.PRSACT
                  ,MOVE!-WORDS););
              eq_q(2(,PRSVEC);
                .LEAVES););
            tell("A grating appears on the ground.");
            tro(.GRATE
              ,OVISON);
            put(.RM
              ,RVARS
              1);)););
      // CELLAR--FIRST ROOM IN BASEMENT.
      define(CELLAR
        ("AUX"
          (WIN
            ,WINNER)
          (PRSACT
            1(,PRSVEC);)
          (DOOR
            find_obj("DOOR");))
        #DECL
          ((WIN)
            ADV
            (PRSACT)
            VERB
            (DOOR)
            OBJECT)
        cond((eq_q(.PRSACT
              ,LOOK!-WORDS);
            tell("You are in a dark and damp cellar with a narrow passageway leading east, and a crawlway to the south.  On the west is the bottom of a steep metal ramp which is unclimbable.");)
          (and(eq_q(vname(.PRSACT);
                WALK-IN!-WORDS);
              ,TRAP-DOOR!-FLAG
              not(otouch_q(.DOOR);););
            setg(TRAP-DOOR!-FLAG
              <>);
            put(.DOOR
              ,OTOUCH?
              T);
            tell("The trap door crashes shut, and you hear someone barring it."
              1);)););
      "STUDIO:  LET PEOPLE UP THE CHIMNEY IF THEY DON'T HAVE MUCH STUFF"
      define(CHIMNEY-FUNCTION
        ("AUX"
          (WINNER
            ,WINNER)
          (AOBJS
            aobjs(.WINNER);))
        #DECL
          ((WINNER)
            ADV
            (AOBJS)
            list([REST
                OBJECT]);)
        cond((and(l__q(length(.AOBJS);
                2);
              memq(find_obj("LAMP");
                .AOBJS););
            setg(LIGHT-LOAD!-FLAG
              T);
            // Door will slam shut next time, too, since this way up don't count.
            cond((not(,TRAP-DOOR!-FLAG);
                put(find_obj("DOOR");
                  ,OTOUCH?
                  <>);));
            <>)
          (T
            setg(LIGHT-LOAD!-FLAG
              <>);)););
      // OBJECT FUNCTIONS
      define(RUG
        ("AUX"
          (PRSVEC
            ,PRSVEC)
          (PRSA
            1(.PRSVEC);)
          OBJ)
        #DECL
          ((PRSVEC)
            VECTOR
            (OBJ)
            OBJECT
            (PRSA)
            VERB)
        cond((eq_q(.PRSA
              ,LIFT!-WORDS);
            tell("The rug is too heavy to lift, but in trying to take it you have  noticed an irregularity beneath it.");)
          (eq_q(.PRSA
              ,MOVE!-WORDS);
            cond((orand(set(OBJ
                    find_obj("RUG");););
                tell("Having moved the carpet previously, you find it impossible to move it again.");)
              (tell("With a great effort, the rug is moved to one side of the room. With the rug moved, the dusty cover of a closed trap-door appears.");
                tro(find_obj("DOOR");
                  ,OVISON);
                put(.OBJ
                  ,ORAND
                  T);));)
          (eq_q(.PRSA
              ,TAKE!-WORDS);
            tell("The rug is extremely heavy and cannot be carried.");)););
      define(RUSTY-KNIFE
        ("AUX"
          (PRSVEC
            ,PRSVEC)
          (PRSA
            1(.PRSVEC);)
          (PRSI
            3(.PRSVEC);))
        #DECL
          ((PRSVEC)
            VECTOR
            (PRSA)
            VERB
            (PRSI)
            or(FALSE
              OBJECT);)
        cond((eq_q(.PRSA
              ,TAKE!-WORDS);
            and(memq(find_obj("SWORD");
                aobjs(,WINNER););
              tell("As you pick up the rusty knife, your sword gives a single pulse of blinding blue light."););
            <>)
          (or(eq_q(.PRSA
                ,ATTAC!-WORDS);
              eq_q(.PRSA
                ,SWING!-WORDS);
              and(eq_q(.PRSA
                  ,THROW!-WORDS);
                .PRSI);
              eq_q(.PRSA
                ,KILL!-WORDS););
            kill_obj(find_obj("RKNIF");
              ,WINNER);
            jigs_up("As the knife approaches its victim, your mind is submerged by an overmastering will.  Slowly, your hand turns, until the rusty blade is an inch from your neck.  The knife seems to sing as it savagely slits your throat.");)););
      define(SKELETON
        ("AUX"
          (RM
            1(,WINNER);)
          (LLD
            find_room("LLD2");)
          L)
        #DECL
          ((RM
              LLD)
            ROOM
            (L)
            list([REST
                OBJECT]);)
        tell("A ghost appears in the room and is appalled at your having desecrated the remains of a fellow adventurer.  He casts a curse on all of your valuables and orders them banished to the Land of the Living Dead.  The ghost leaves, muttering obscenities.");
        set(L
          rob_room(.RM
            ()
            100););
        set(L
          rob_adv(,PLAYER
            .L););
        mapf(<>
          function((X)
            #DECL
              ((X)
                OBJECT)
            put(.X
              ,OROOM
              .LLD););
          .L);
        cond((not(empty_q(.L););
            putrest(rest(.L
                _(length(.L);
                  1););
              robjs(.LLD););
            put(.LLD
              ,ROBJS
              .L);));
        T);
      define(TROLL
        ("AUX"
          (PA
            1(,PRSVEC);)
          (PV
            ,PRSVEC)
          (PRSO
            2(.PV);)
          (HERE
            ,HERE)
          (T
            find_obj("TROLL");)
          (A
            find_obj("AXE");))
        #DECL
          ((PV)
            VECTOR
            (PRSO)
            or(FALSE
              OBJECT);
            (WIN)
            ADV
            (HERE)
            ROOM
            (T
              A)
            OBJECT
            (PA)
            VERB)
        cond((eq_q(.PA
              ,FIGHT!-WORDS);
            cond((eq_q(ocan(.A);
                  .T);
                <>)
              (memq(.A
                  robjs(,HERE););
                snarf_object(.T
                  .A);
                and(eq_q(.HERE
                    oroom(.T););
                  tell("The troll, now worried about this encounter, recovers his bloody axe."););
                T)
              (eq_q(.HERE
                  oroom(.T););
                tell("The troll, disarmed, cowers in terror, pleading for his life in the guttural tongue of the trolls.");
                T));)
          (eq_q(.PA
              ,DEAD\!!-WORDS);
            setg(TROLL-FLAG!-FLAG
              T);)
          (eq_q(.PA
              ,OUT\!!-WORDS);
            trz(find_obj("AXE");
              ,OVISON);
            put(.T
              ,ODESC1
              ,TROLLOUT);
            setg(TROLL-FLAG!-FLAG
              T);)
          (eq_q(.PA
              ,IN\!!-WORDS);
            tro(find_obj("AXE");
              ,OVISON);
            cond((eq_q(oroom(.T);
                  .HERE);
                tell("The troll stirs, quickly resuming a fighting stance.");));
            put(.T
              ,ODESC1
              ,TROLLDESC);
            setg(TROLL-FLAG!-FLAG
              <>);)
          (eq_q(.PA
              ,FIRST?!-WORDS);
            prob(33);)
          (and(or(eq_q(.PA
                  ,THROW!-WORDS);
                eq_q(.PA
                  ,GIVE!-WORDS););
              .PRSO);
            cond((eq_q(.PA
                  ,THROW!-WORDS);
                tell("The troll, who is remarkably coordinated, catches the "
                  1
                  odesc2(.PRSO););)
              (tell("The troll, who is not overly proud, graciously accepts the gift");));
            cond((eq_q(.PRSO
                  find_obj("KNIFE"););
                tell("and being for the moment sated, throws it back.  Fortunately, the troll has poor control, and the knife falls to the floor.  He does not look pleased.");
                tro(.T
                  ,FIGHTBIT);)
              (tell("and not having the most discriminating tastes, gleefully eats it.");
                remove_object(2(.PV););));)
          (or(eq_q(.PA
                ,TAKE!-WORDS);
              eq_q(.PA
                ,MOVE!-WORDS););
            tell("The troll spits in your face, saying \"Better luck next time.\"");)
          (eq_q(vname(.PA);
              MUNG!-WORDS);
            tell("The troll laughs at your puny gesture.");)););
      "MIRROR ROOM HACKERY"
      define(MIRROR-ROOM
        ("AUX"
          (PRSACT
            1(,PRSVEC);))
        #DECL
          ((PRSACT)
            VERB)
        cond((and(eq_q(.PRSACT
                ,LOOK!-WORDS);
              lit_q(,HERE););
            tell("You are in a large square room with tall ceilings.  On the south wall is an enormous mirror which fills the entire wall.  There are exits on the other three sides of the room.");
            cond((,MIRROR-MUNG!-FLAG
                tell("Unfortunately, you have managed to destroy it by your reckless actions."
                  1);));)););
      setg(MIRROR-MUNG!-FLAG
        <>);
      define(MIRROR-MIRROR
        ("AUX"
          (PRSACT
            1(,PRSVEC);)
          RM1
          RM2
          L1)
        #DECL
          ((PRSACT)
            VERB
            (RM1
              RM2)
            ROOM
            (L1)
            list([REST
                OBJECT]);)
        cond((and(not(,MIRROR-MUNG!-FLAG);
              eq_q(vname(.PRSACT);
                RUB!-WORDS););
            set(RM1
              ,HERE);
            set(RM2
              cond((eq_q(.RM1
                    find_room("MIRR1"););
                  find_room("MIRR2");)
                (find_room("MIRR1");)););
            set(L1
              robjs(.RM1););
            put(.RM1
              ,ROBJS
              robjs(.RM2););
            put(.RM2
              ,ROBJS
              .L1);
            mapf(<>
              function((X)
                #DECL
                  ((X)
                    OBJECT)
                put(.X
                  ,OROOM
                  .RM1););
              robjs(.RM1););
            mapf(<>
              function((X)
                #DECL
                  ((X)
                    OBJECT)
                put(.X
                  ,OROOM
                  .RM2););
              robjs(.RM2););
            goto(.RM2);
            tell("There is a rumble from deep within the earth and the room shakes.");)
          (or(eq_q(.PRSACT
                ,LOOK!-WORDS);
              eq_q(.PRSACT
                ,EXAMI!-WORDS););
            cond((,MIRROR-MUNG!-FLAG
                tell("The mirror is broken into many pieces.");)
              (tell("There is an ugly person staring at you.");));)
          (eq_q(.PRSACT
              ,TAKE!-WORDS);
            tell("Nobody but a greedy surgeon would allow you to attempt that trick.");)
          (or(eq_q(vname(.PRSACT);
                MUNG!-WORDS);
              eq_q(vname(.PRSACT);
                THROW!-WORDS););
            cond((,MIRROR-MUNG!-FLAG
                tell("Haven't you done enough already?");)
              (setg(MIRROR-MUNG!-FLAG
                  T);
                tell("You have broken the mirror.  I hope you have a seven years supply of good luck handy.");));)););
      define(CAROUSEL-ROOM
        ("AUX"
          (PV
            ,PRSVEC))
        #DECL
          ((PV)
            VECTOR)
        cond((and(eq_q(1(.PV);
                ,WALK-IN!-WORDS);
              ,CAROUSEL-ZOOM!-FLAG);
            jigs_up(,SPINDIZZY);)
          (eq_q(1(.PV);
              ,LOOK!-WORDS);
            tell("You are in a circular room with passages off in eight directions."
              1);
            cond((not(,CAROUSEL-FLIP!-FLAG);
                tell("Your compass needle spins wildly, and you can't get your bearings."
                  1);));)););
      define(CAROUSEL-EXIT
        ("AUX"
          CX)
        #DECL
          ((CX)
            or(CEXIT
              NEXIT
              ROOM);)
        cond((,CAROUSEL-FLIP!-FLAG
            <>)
          (tell("Unfortunately, it is impossible to tell directions in here."
              1);
            carousel_out();)););
      define(CAROUSEL-OUT
        ("AUX"
          CX)
        #DECL
          ((CX)
            or(CEXIT
              NEXIT
              ROOM);)
        and(type_q(set(CX
              nth(rexits(,HERE);
                _(2
                  _(1
                    mod(random();
                      8);););););
            CEXIT);
          cxroom(.CX);););
      define(TORCH-ROOM
        ("AUX"
          (PRSACT
            1(,PRSVEC);))
        #DECL
          ((PRSACT)
            VERB)
        cond((eq_q(.PRSACT
              ,LOOK!-WORDS);
            tell("You are in a large room with a prominent doorway leading to a down staircase. To the west is a narrow twisting tunnel.  Above you is a large dome painted with scenes depicting elfin hacking rites. Up around the edge of the dome (20 feet up) is a wooden railing. In the center of the room there is a white marble pedestal.");
            cond((,DOME-FLAG!-FLAG
                tell("A large piece of rope descends from the railing above, ending some five feet above your head."
                  1);));)););
      define(DOME-ROOM
        ("AUX"
          (PRSACT
            1(,PRSVEC);))
        #DECL
          ((PRSACT)
            VERB)
        cond((eq_q(.PRSACT
              ,LOOK!-WORDS);
            tell("You are at the periphery of a large dome, which forms the ceiling of another room below.  Protecting you from a precipitous drop is a wooden railing which circles the dome.");
            cond((,DOME-FLAG!-FLAG
                tell("Hanging down from the railing is a rope which ends about ten feet from the floor below."
                  1);));)
          (eq_q(vname(.PRSACT);
              JUMP!-WORDS);
            jigs_up("I'm afraid that the leap you attempted has done you in.");)););
      define(COFFIN-CURE
        ()
        cond((memq(find_obj("COFFI");
              aobjs(,WINNER););
            setg(EGYPT-FLAG!-FLAG
              <>);)
          (ELSE
            setg(EGYPT-FLAG!-FLAG
              T);));
        <>);
      define(LLD-ROOM
        ("AUX"
          (PV
            ,PRSVEC)
          (WIN
            ,WINNER)
          (WOBJ
            aobjs(.WIN);)
          (PA
            1(.PV);)
          (CAND
            find_obj("CANDL");))
        #DECL
          ((PV)
            VECTOR
            (PA)
            VERB
            (WIN)
            ADV
            (WOBJ)
            list([REST
                OBJECT]);
            (CAND)
            OBJECT)
        cond((eq_q(.PA
              ,LOOK!-WORDS);
            tell("You are outside a large gateway, on which is inscribed   \"Abandon every hope, all ye who enter here.\"   The gate is open; through it you can see a desolation, with a pile of mangled corpses in one corner.  Thousands of voices, lamenting some hideous fate, can be heard.");
            cond((not(,LLD-FLAG!-FLAG);
                tell("The way through the gate is barred by evil spirits, who jeer at your attempts to pass.");));)
          (eq_q(vname(.PA);
              EXORC!-WORDS);
            cond((memq(find_obj("GHOST");
                  robjs(,HERE););
                cond((and(memq(find_obj("BELL");
                        .WOBJ);
                      memq(find_obj("BOOK");
                        .WOBJ);
                      memq(set(CAND
                          find_obj("CANDL"););
                        .WOBJ);
                      g_q(olight_q(.CAND);
                        0););
                    tell("There is a clap of thunder, and a voice echoes through the cavern:  \"Begone, fiends!\"  The spirits, sensing the presence of a greater power, flee through the walls.");
                    remove_object(find_obj("GHOST"););
                    setg(LLD-FLAG!-FLAG
                      T);)
                  (tell("You are not equipped for an exorcism.");));)
              (jigs_up("There is a clap of thunder, and a voice echoes through the cavern: \"Begone, chomper!\"  Apparently, the voice thinks you are an evil spirit, and dismisses you from the realm of the living.");));)););
      define(LLD2-ROOM
        ("AUX"
          (PRSA
            1(,PRSVEC);))
        #DECL
          ((PRSA)
            VERB)
        cond((eq_q(.PRSA
              ,LOOK!-WORDS);
            tell("You have entered the Land of the Living Dead, a large desolate room. Although it is apparently uninhabited, you can hear the sounds of thousands of lost souls weeping and moaning.  In the east corner are stacked the remains of dozens of previous adventurers who were less fortunate than yourself.  To the east is an ornate passage, apparently recently constructed. "
              1
              cond((,ON-POLE!-FLAG
                  " Amid the desolation, you spot what appears to be your head, at the end of a long pole.")
                ("")););)););
      define(GHOST-FUNCTION
        ("AUX"
          (PV
            ,PRSVEC)
          (G
            find_obj("GHOST");))
        #DECL
          ((PV)
            VECTOR
            (G)
            OBJECT)
        cond((eq_q(3(.PV);
              .G);
            tell("How can you attack a spirit with material objects?");
            <>)
          (eq_q(2(.PV);
              .G);
            tell("You seem unable to affect these spirits.");)););
      define(MAZE-11
        ("AUX"
          (PRSACT
            1(,PRSVEC);))
        #DECL
          ((PRSACT)
            VERB)
        cond((eq_q(.PRSACT
              ,LOOK!-WORDS);
            tell("You are in a small room near the maze. There are twisty passages in the immediate vicinity.");
            cond((,KEY-FLAG!-FLAG
                tell("Above you is an open grating with sunlight pouring in.");)
              (,GRUNLOCK!-FLAG
                tell("Above you is a grating.");)
              (tell("Above you is a grating locked with a skull-and-crossbones lock.");));)););
      define(GRAT1-FUNCTION
        ("AUX"
          (PRSACT
            1(,PRSVEC);))
        #DECL
          ((PRSACT)
            VERB)
        cond((,GRUNLOCK!-FLAG
            open_close(.PRSACT
              KEY-FLAG!-FLAG
              "The grating opens."
              "The grating is closed.");)
          (tell("The grating is locked.");)););
      define(GRAT2-FUNCTION
        ("AUX"
          (PRSACT
            1(,PRSVEC);))
        #DECL
          ((PRSACT)
            VERB)
        cond((,GRUNLOCK!-FLAG
            open_close(.PRSACT
              KEY-FLAG!-FLAG
              "The grating opens to reveal trees above you."
              "The grating is closed.");
            tro(find_obj("GRAT1");
              ,OVISON);)
          (tell("The grating is locked.");)););
      define(TREASURE-ROOM
        ("AUX"
          (PV
            ,PRSVEC)
          (HACK
            ,ROBBER-DEMON)
          HH
          CHALI
          (HOBJ
            hobj(.HACK);)
          (FLG
            <>)
          TL
          (HERE
            ,HERE)
          (ROOMS
            ,ROOMS))
        #DECL
          ((HACK)
            HACK
            (PV)
            vector(VERB);
            (HH)
            list([REST
                OBJECT]);
            (HOBJ)
            OBJECT
            (FLG)
            or(ATOM
              FALSE);
            (TL
              ROOMS)
            list([REST
                ROOM]);
            (HERE)
            ROOM)
        cond((and(haction(.HACK);
              eq_q(vname(1(.PV););
                WALK-IN!-WORDS););
            cond((set(FLG
                  neq_q(oroom(.HOBJ);
                    .HERE););
                tell("You hear a scream of anguish as you violate the robber's hideaway.  Using passages unknown to you, he rushes to its defense.");
                cond((oroom(.HOBJ);
                    remove_object(.HOBJ);));
                tro(.HOBJ
                  ,FIGHTBIT);
                put(.HACK
                  ,HROOM
                  .HERE);
                put(.HACK
                  ,HROOMS
                  cond((empty_q(set(TL
                          rest(memq(.HERE
                              .ROOMS););););
                      .ROOMS)
                    (.TL)););
                insert_object(.HOBJ
                  .HERE);)
              (T
                tro(.HOBJ
                  ,FIGHTBIT);));
            and(not(ocan(set(CHALI
                    find_obj("CHALI"););););
              eq_q(oroom(.CHALI);
                .HERE);
              trz(.CHALI
                ,TAKEBIT););
            cond((not(length_q(robjs(.HERE);
                    2););
                tell("The thief gestures mysteriously, and the treasures in the room suddenly vanish.");));
            mapf(<>
              function((X)
                #DECL
                  ((X)
                    OBJECT)
                cond((and(neq_q(.X
                        .CHALI);
                      neq_q(.X
                        .HOBJ););
                    trz(.X
                      ,OVISON);)););
              robjs(.HERE););)););
      define(TREAS
        ()
        cond((and(eq_q(1(,PRSVEC);
                ,TREAS!-WORDS);
              eq_q(,HERE
                find_room("TEMP1");););
            goto(find_room("TREAS"););
            room_desc();)
          (and(eq_q(1(,PRSVEC);
                ,TEMPL!-WORDS);
              eq_q(,HERE
                find_room("TREAS");););
            goto(find_room("TEMP1"););
            room_desc();)
          (T
            tell("Nothing happens.");)););
      define(PRAYER
        ()
        cond((and(eq_q(,HERE
                find_room("TEMP2"););
              goto(find_room("FORE1");););
            room_desc();)
          (tell("If you pray enough, your prayers may be answered.");)););
      setg(GATE-FLAG!-FLAG
        <>);
      define(DAM-ROOM
        ("AUX"
          (PRSACT
            1(,PRSVEC);))
        #DECL
          ((PRSACT)
            VERB)
        cond((eq_q(.PRSACT
              ,LOOK!-WORDS);
            tell("You are standing on the top of the Flood Control Dam #3, which was quite a tourist attraction in times far distant.  There are paths to the north, south, east, and down.");
            cond((,LOW-TIDE!-FLAG
                tell("It appears that the dam has been opened since the water level behind it is low and the sluice gate has been opened.  Water is rushing downstream through the gates."
                  1);)
              (tell("The sluice gates on the dam are closed.  Behind the dam, there can be seen a wide lake.  A small stream is formed by the runoff from the lake."
                  1);));
            tell("There is a control panel here.  There is a large metal bolt on the  panel. Above the bolt is a small green plastic bubble."
              1);
            cond((,GATE-FLAG!-FLAG
                tell("The green bubble is glowing."
                  1);));)););
      define(BOLT-FUNCTION
        ("AUX"
          (PRSACT
            1(,PRSVEC);)
          (PRSI
            3(,PRSVEC);)
          (TRUNK
            find_obj("TRUNK");))
        #DECL
          ((PRSACT)
            VERB
            (TRUNK)
            OBJECT
            (PRSI)
            or(FALSE
              OBJECT);)
        cond((eq_q(.PRSACT
              ,TURN!-WORDS);
            cond((eq_q(.PRSI
                  find_obj("WRENC"););
                cond((,GATE-FLAG!-FLAG
                    cond((,LOW-TIDE!-FLAG
                        setg(LOW-TIDE!-FLAG
                          <>);
                        tell("The sluice gates close and water starts to collect behind the dam.");
                        and(memq(.TRUNK
                            robjs(find_room("RESES");););
                          trz(.TRUNK
                            ,OVISON););
                        T)
                      (setg(LOW-TIDE!-FLAG
                          T);
                        tell("The sluice gates open and water pours through the dam.");
                        tro(.TRUNK
                          ,OVISON);));)
                  (tell("The bolt won't turn with your best effort.");));)
              (type_q(.PRSI
                  OBJECT);
                tell("The bolt won't turn using the "
                  1
                  odesc2(.PRSI);
                  ".");));)););
      psetg(DROWNINGS
        '["up to your ankles."
            "up to your shin."
            "up to your knees."
            "up to your hips."
            "up to your waist."
            "up to your chest."
            "up to your neck."
            "over your head."
            "high in your lungs."]);
      gdecl((DROWNINGS)
        vector([REST
            STRING]););
      define(MAINT-ROOM
        ("AUX"
          (PV
            ,PRSVEC)
          (PRSACT
            1(.PV);)
          (PRSO
            2(.PV);)
          (PRSI
            3(.PV);)
          (MNT
            find_room("MAINT");)
          (HERE?
            eq_q(,HERE
              .MNT);)
          HACK)
        #DECL
          ((PRSACT)
            VERB
            (PRSI)
            or(FALSE
              OBJECT);
            (HERE?)
            or(ATOM
              FALSE);
            (MNT)
            ROOM
            (PRSO)
            PRSOBJ
            (HACK)
            FIX)
        cond((eq_q(.PRSACT
              ,C-INT!-WORDS);
            put(.MNT
              ,RVARS
              _(1
                set(HACK
                  rvars(.MNT););););
            cond((and(.HERE?
                  tell("The water level here is now "
                    1
                    nth(,DROWNINGS
                      _(1
                        _(set(HACK
                            rvars(.MNT););
                          2);););););));
            cond((g__q(set(HACK
                    rvars(.MNT););
                  16);
                mung_room(.MNT
                  "The room is full of water and cannot be entered.");
                clock_int(,MNTIN
                  0);
                and(.HERE?
                  jigs_up("I'm afraid you have done drowned yourself."););));));
        cond((eq_q(vname(.PRSACT);
              PUSH!-WORDS);
            cond((eq_q(.PRSO
                  find_obj("BLBUT"););
                cond((0_q(set(HACK
                        rvars(,HERE);););
                    tell("There is a rumbling sound and a stream of water appears to burst from the east wall of the room (apparently, a leak has occurred in a pipe.)");
                    put(,HERE
                      ,RVARS
                      1);
                    clock_int(,MNTIN
                      -1);
                    T)
                  (tell("The blue button appears to be jammed.");));)
              (eq_q(.PRSO
                  find_obj("RBUTT"););
                put(,HERE
                  ,RLIGHT?
                  not(rlight_q(,HERE);););
                cond((rlight_q(,HERE);
                    tell("The lights within the room come on.");)
                  (tell("The lights within the room shut off.");));)
              (eq_q(.PRSO
                  find_obj("BRBUT"););
                setg(GATE-FLAG!-FLAG
                  <>);
                tell("Click.");)
              (eq_q(.PRSO
                  find_obj("YBUTT"););
                setg(GATE-FLAG!-FLAG
                  T);
                tell("Click.");));)););
      define(LEAK-FUNCTION
        ("AUX"
          HACK
          (PRSVEC
            ,PRSVEC)
          (PRSA
            1(.PRSVEC);)
          (PRSI
            3(.PRSVEC);))
        #DECL
          ((PRSVEC)
            vector([3
                ANY]);
            (PRSA)
            VERB
            (PRSI)
            or(OBJECT
              FALSE);
            (HACK)
            FIX)
        cond((eq_q(2(.PRSVEC);
              find_obj("LEAK"););
            cond((and(eq_q(vname(.PRSA);
                    PLUG!-WORDS);
                  g_q(set(HACK
                      rvars(,HERE););
                    0););
                cond((eq_q(.PRSI
                      find_obj("PUTTY"););
                    put(,HERE
                      ,RVARS
                      -1);
                    clock_int(,MNTIN
                      0);
                    tell("By some miracle of elven technology, you have managed to stop the leak in the dam.");)
                  (with_tell(.PRSI);));));)););
      define(TUBE-FUNCTION
        ("AUX"
          (PRSVEC
            ,PRSVEC))
        #DECL
          ((PRSVEC)
            vector([3
                ANY]);)
        cond((and(eq_q(1(.PRSVEC);
                ,PUT!-WORDS);
              eq_q(3(.PRSVEC);
                find_obj("TUBE");););
            tell("The tube refuses to accept anything.");)););
      define(WITH-TELL
        (OBJ)
        #DECL
          ((OBJ)
            OBJECT)
        tell("With a "
          1
          odesc2(.OBJ);
          "?"););
      define(CAVE2-ROOM
        ("AUX"
          FOO
          BAR
          (PRSACT
            1(,PRSVEC);)
          C)
        #DECL
          ((FOO)
            vector(FIX
              CEVENT);
            (BAR)
            CEVENT
            (PRSACT)
            VERB
            (C)
            OBJECT)
        cond((eq_q(vname(.PRSACT);
              WALK-IN!-WORDS);
            and(memq(set(C
                  find_obj("CANDL"););
                aobjs(,WINNER););
              prob(50);
              1_q(olight_q(.C););
              clock_disable(set(BAR
                  2(set(FOO
                      orand(.C);););););
              put(.C
                ,OLIGHT?
                -1);
              tell("The cave is very windy at the moment and your candles have blown out."););)););
      define(BOTTLE-FUNCTION
        ("AUX"
          (PRSACT
            1(,PRSVEC);))
        #DECL
          ((PRSACT)
            VERB)
        cond((eq_q(1(.PRSACT);
              THROW!-WORDS);
            tell("The bottle hits the far wall and is decimated.");
            remove_object(2(,PRSVEC););)
          (eq_q(1(.PRSACT);
              MUNG!-WORDS);
            cond((memq(2(,PRSVEC);
                  aobjs(,WINNER););
                put(,WINNER
                  ,AOBJS
                  splice_out(2(,PRSVEC);
                    aobjs(,WINNER);););
                tell("You have destroyed the bottle.  Well done.");)
              (memq(2(,PRSVEC);
                  robjs(,HERE););
                put(,HERE
                  ,ROBJS
                  splice_out(2(,PRSVEC);
                    robjs(,HERE);););
                tell("A brilliant maneuver destroys the bottle.");));)););
      define(FILL
        ("AUX"
          (REM
            <>)
          (PRSVEC
            ,PRSVEC)
          (W
            find_obj("WATER");))
        #DECL
          ((REM)
            or(ATOM
              FALSE);
            (PRSVEC)
            vector(VERB
              OBJECT
              ANY);
            (W)
            OBJECT)
        cond((object_action();)
          (or(rtrnn(,HERE
                ,RFILLBIT);
              set(REM
                or(eq_q(ocan(.W);
                    avehicle(,WINNER););
                  eq_q(oroom(.W);
                    ,HERE););););
            put(.PRSVEC
              1
              ,TAKE!-WORDS);
            put(.PRSVEC
              3
              2(.PRSVEC););
            put(.PRSVEC
              2
              .W);
            water_function(.REM);)
          (tell("I can't find any water here.");)););
      define(WATER-FUNCTION
        ("OPTIONAL"
          (REM
            T)
          "AUX"
          (PRSVEC
            ,PRSVEC)
          (PRSACT
            1(.PRSVEC);)
          (ME
            ,WINNER)
          (B
            find_obj("BOTTL");)
          (W
            2(.PRSVEC);)
          (AV
            avehicle(.ME);)
          (CAN
            3(.PRSVEC);))
        #DECL
          ((PRSACT)
            VERB
            (ME)
            ADV
            (B
              W)
            OBJECT
            (REM)
            or(ATOM
              FALSE);
            (PRSVEC)
            vector([3
                ANY]);
            (AV)
            or(OBJECT
              FALSE);
            (CAN)
            or(FALSE
              OBJECT);)
        cond((or(eq_q(.PRSACT
                ,TAKE!-WORDS);
              eq_q(.PRSACT
                ,PUT!-WORDS););
            cond((and(.AV
                  eq_q(.AV
                    .CAN););
                tell("There is now a puddle in the bottom of the "
                  1
                  odesc2(.AV);
                  ".");
                cond((memq(.W
                      aobjs(.ME););
                    drop_object(.W
                      .ME);));
                cond((memq(.W
                      ocontents(.AV););)
                  (put(.AV
                      ,OCONTENTS
                      (.W
                        !
                        ocontents(.AV);));
                    put(.W
                      ,OCAN
                      .AV);));)
              (and(.CAN
                  neq_q(.CAN
                    .B););
                tell("The water leaks out of the "
                  1
                  odesc2(.CAN);
                  " and evaporates immediately.");
                cond((memq(.W
                      aobjs(.ME););
                    drop_object(.W
                      .ME);)
                  (remove_object(.W);));)
              (memq(.B
                  aobjs(.ME););
                cond((not(empty_q(ocontents(.B);););
                    tell("The bottle is already full.");)
                  (not(oopen_q(.B););
                    tell("The bottle is closed.");)
                  (T
                    and(.REM
                      remove_object(.W););
                    put(.B
                      ,OCONTENTS
                      (.W));
                    put(.W
                      ,OCAN
                      .B);
                    tell("The bottle is now full of water.");));)
              (and(eq_q(ocan(.W);
                    .B);
                  eq_q(.PRSACT
                    ,TAKE!-WORDS);
                  not(.CAN););
                put(.PRSVEC
                  2
                  .B);
                take(T);
                put(.PRSVEC
                  2
                  .W);)
              (tell("The water slips through your fingers.");));)
          (or(eq_q(.PRSACT
                ,DROP!-WORDS);
              eq_q(.PRSACT
                ,POUR!-WORDS);
              eq_q(.PRSACT
                ,GIVE!-WORDS););
            cond((memq(.W
                  aobjs(.ME););
                drop_object(.W
                  .ME);));
            cond((.AV
                tell("There is now a puddle in the bottom of the "
                  1
                  odesc2(.AV);
                  ".");)
              (tell("The water spills to the floor and evaporates immediately.");
                remove_object(.W);));)
          (eq_q(.PRSACT
              ,THROW!-WORDS);
            tell("The water splashes on the walls, and evaporates immediately.");
            remove_object(.W);)););
      define(ROPE-FUNCTION
        ("AUX"
          (PRSACT
            1(,PRSVEC);)
          (DROOM
            find_room("DOME");)
          (ROPE
            find_obj("ROPE");)
          (WIN
            ,WINNER))
        #DECL
          ((PRSACT)
            VERB
            (ROPE)
            OBJECT
            (WIN)
            ADV
            (DROOM)
            ROOM)
        cond((neq_q(,HERE
              .DROOM);
            setg(DOME-FLAG!-FLAG
              <>);
            cond((eq_q(vname(.PRSACT);
                  TIE!-WORDS);
                tell("There is nothing it can be tied to.");)
              (eq_q(vname(.PRSACT);
                  UNTIE!-WORDS);
                tell("It is not tied to anything.");));)
          (and(eq_q(vname(.PRSACT);
                TIE!-WORDS);
              eq_q(3(,PRSVEC);
                find_obj("RAILI");););
            cond((,DOME-FLAG!-FLAG
                tell("The rope is already attached.");)
              (tell("The rope drops over the side and comes within ten feet of the floor.");
                setg(DOME-FLAG!-FLAG
                  T);
                tro(.ROPE
                  ,NDESCBIT);
                cond((not(oroom(.ROPE););
                    put(.WIN
                      ,AOBJS
                      splice_out(.ROPE
                        aobjs(.WIN);););
                    insert_object(.ROPE
                      .DROOM);));));)
          (eq_q(vname(.PRSACT);
              UNTIE!-WORDS);
            cond((,DOME-FLAG!-FLAG
                setg(DOME-FLAG!-FLAG
                  <>);
                trz(.ROPE
                  ,NDESCBIT);
                tell("Although you tied it incorrectly, the rope becomes free.");)
              (tell("It is not tied to anything.");));)
          (and(eq_q(.PRSACT
                ,DROP!-WORDS);
              not(,DOME-FLAG!-FLAG););
            remove_object(.ROPE);
            insert_object(.ROPE
              find_room("TORCH"););
            tell("The rope drops gently to the floor below.");)
          (and(eq_q(.PRSACT
                ,TAKE!-WORDS);
              ,DOME-FLAG!-FLAG
              tell("The rope is tied to the railing."););)););
      define(CYCLOPS
        ("AUX"
          (PRSACT
            1(,PRSVEC);)
          (PRSOB1
            2(,PRSVEC);)
          (RM
            ,HERE)
          (FOOD
            find_obj("FOOD");)
          (DRINK
            find_obj("WATER");)
          (COUNT
            rvars(.RM);)
          (GARLIC
            find_obj("GARLI");)
          CYC)
        #DECL
          ((PRSACT)
            VERB
            (PRSOB1)
            or(OBJECT
              FALSE);
            (RM)
            ROOM
            (FOOD
              DRINK)
            OBJECT
            (CYC
              GARLIC)
            OBJECT
            (COUNT)
            FIX)
        cond((,CYCLOPS-FLAG!-FLAG
            cond((or(eq_q(.PRSACT
                    ,AWAKE!-WORDS);
                  eq_q(.PRSACT
                    ,MUNG!-WORDS);
                  eq_q(.PRSACT
                    ,BURN!-WORDS);
                  eq_q(.PRSACT
                    ,FIGHT!-WORDS););
                tell("The cyclops yawns and stares at the thing that woke him up.");
                setg(CYCLOPS-FLAG!-FLAG
                  <>);
                trz(set(CYC
                    find_obj("CYCLO"););
                  ,SLEEPBIT);
                tro(.CYC
                  ,FIGHTBIT);
                put(.RM
                  ,RVARS
                  abs(rvars(.RM);););
                T));)
          (g_q(abs(.COUNT);
              5);
            jigs_up("The cyclops, tired of all of your games and trickery, eats you. The cyclops says 'Mmm.  Just like mom used to make 'em.'");)
          (eq_q(vname(.PRSACT);
              GIVE!-WORDS);
            cond((eq_q(.PRSOB1
                  .FOOD);
                cond((g__q(.COUNT
                      0);
                    remove_object(.FOOD);
                    tell("The cyclops says 'Mmm Mmm.  I love hot peppers!  But oh, could I use a drink.  Perhaps I could drink the blood of that thing'.  From the gleam in his eye, it could be surmised that you are 'that thing'.");
                    put(.RM
                      ,RVARS
                      min(-1
                        _(.COUNT);););));)
              (eq_q(.PRSOB1
                  .DRINK);
                cond((l_q(.COUNT
                      0);
                    remove_object(.DRINK);
                    tro(set(CYC
                        find_obj("CYCLO"););
                      ,SLEEPBIT);
                    trz(.CYC
                      ,FIGHTBIT);
                    tell("The cyclops looks tired and quickly falls fast asleep (what did you put in that drink, anyway?).");
                    setg(CYCLOPS-FLAG!-FLAG
                      T);)
                  (tell("The cyclops apparently was not thirsty at the time and refuses your generous gesture.");
                    <>));)
              (eq_q(.PRSOB1
                  .GARLIC);
                tell("The cyclops may be hungry, but there is a limit.");
                put(.RM
                  ,RVARS
                  aos_sos(.COUNT););)
              (tell("The cyclops is not so stupid as to eat THAT!");
                put(.RM
                  ,RVARS
                  aos_sos(.COUNT););));)
          (or(eq_q(.PRSACT
                ,FIRST?!-WORDS);
              eq_q(.PRSACT
                ,FIGHT!-WORDS););
            <>)
          (and(put(.RM
                ,RVARS
                aos_sos(.COUNT););
              <>);)
          (or(eq_q(.PRSACT
                ,THROW!-WORDS);
              eq_q(vname(.PRSACT);
                MUNG!-WORDS););
            cond((prob(50);
                tell("Your actions don't appear to be doing much harm to the cyclops, but they do not exactly lower your insurance premiums, either.");)
              (tell("The cyclops ignores all injury to his body with a shrug.");));)
          (eq_q(.PRSACT
              ,TAKE!-WORDS);
            tell("The cyclops is rather heavy and doesn't take kindly to being grabbed.");)
          (eq_q(.PRSACT
              ,TIE!-WORDS);
            tell("You cannot tie the cyclops, although he is fit to be tied.");)););
      define(CYCLOPS-ROOM
        ("AUX"
          (PV
            ,PRSVEC)
          (RM
            ,HERE)
          (VARS
            rvars(.RM);))
        #DECL
          ((PV)
            VECTOR
            (RM)
            ROOM
            (VARS)
            FIX)
        cond((eq_q(1(.PV);
              ,LOOK!-WORDS);
            tell("You are in a room with an exit on the west side, and a staircase leading up.");
            cond((and(,CYCLOPS-FLAG!-FLAG
                  not(,MAGIC-FLAG!-FLAG););
                tell("The cyclops, perhaps affected by a drug in your drink, is sleeping blissfully at the foot of the stairs.");)
              (,MAGIC-FLAG!-FLAG
                tell("On the north of the room is a wall which used to be solid, but which now has a cyclops-sized hole in it.");)
              (0_q(.VARS);
                tell("A cyclops, who looks prepared to eat horses (much less mere adventurers), blocks the staircase.  From his state of health, and the bloodstains on the walls, you gather that he is not very friendly, though he likes people."
                  1);)
              (g_q(.VARS
                  0);
                tell("The cyclops is standing in the corner, eyeing you closely.  I don't think he likes you very much.  He looks extremely hungry even for a cyclops.");)
              (l_q(.VARS
                  0);
                tell("The cyclops, having eaten the hot peppers, appears to be gasping. His enflamed tongue protrudes from his man-sized mouth.");));
            cond((,CYCLOPS-FLAG!-FLAG)
              (or(0_q(.VARS);
                  tell(nth(,CYCLOMAD
                      abs(.VARS););););));)););
      psetg(CYCLOMAD
        '["The cyclops seems somewhat agitated."
            "The cyclops appears to be getting more agitated."
            "The cyclops is moving about the room, looking for something."
            "The cyclops was looking for salt and pepper.  I think he is gathering condiments for his upcoming snack."
            "The cyclops is moving toward you in an unfriendly manner."
            "You have two choices: 1. Leave  2. Become dinner."]);
      gdecl((CYCLOMAD)
        vector([REST
            STRING]););
      define(AOS-SOS
        (FOO)
        #DECL
          ((FOO)
            FIX)
        cond((l_q(.FOO
              0);
            set(FOO
              _(.FOO
                1););)
          (set(FOO
              _(.FOO
                1););));
        cond((,CYCLOPS-FLAG!-FLAG)
          (tell(nth(,CYCLOMAD
                abs(.FOO);););));
        .FOO);
      setg(ECHO-FLAG!-FLAG
        <>);
      define(ECHO-ROOM
        ("AUX"
          (READER-STRING
            ,READER-STRING)
          (B
            ,INBUF)
          L
          (RM
            find_room("ECHO");)
          (OUTCHAN
            ,OUTCHAN)
          VERB
          (WALK
            ,WALK!-WORDS))
        #DECL
          ((OUTCHAN)
            CHANNEL
            (WALK
              VERB)
            VERB
            (READER-STRING)
            STRING
            (PRSACT)
            VERB
            (B)
            STRING
            (L)
            FIX
            (RM)
            ROOM)
        cond((,ECHO-FLAG!-FLAG)
          (unwind(prog(()
                mapf(<>
                  function((OBJ)
                    #DECL
                      ((OBJ)
                        OBJECT)
                    cond((ovis_q(.OBJ);
                        tro(.OBJ
                          ,ECHO-ROOM-BIT);
                        trz(.OBJ
                          ,OVISON);)););
                  robjs(.RM););
                repeat(((PRSVEC
                      ,PRSVEC)
                    RANDOM-ACTION)
                  #DECL
                    ((PRSVEC)
                      VECTOR)
                  set(L
                    readstring(.B
                      ,INCHAN
                      .READER-STRING););
                  readchr(,INCHAN);
                  or(,ALT-FLAG
                    readchr(,INCHAN););
                  setg(MOVES
                    _(,MOVES
                      1););
                  cond((and(eparse(lex(.B
                            rest(.B
                              .L);
                            T);
                          T);
                        eq_q(set(VERB
                            1(.PRSVEC););
                          .WALK);
                        2(.PRSVEC);
                        memq(chtype(2(.PRSVEC);
                            ATOM);
                          rexits(.RM);););
                      set(RANDOM-ACTION
                        vfcn(.VERB););
                      apply_random(.RANDOM-ACTION);
                      cond((neq_q(,HERE
                            .RM);
                          mapf(<>
                            function((X)
                              #DECL
                                ((X)
                                  OBJECT)
                              cond((trnn(.X
                                    ,ECHO-ROOM-BIT);
                                  trz(.X
                                    ,ECHO-ROOM-BIT);
                                  tro(.X
                                    ,OVISON);)););
                            robjs(.RM););));
                      return(T);)
                    (printstring(.B
                        .OUTCHAN
                        .L);
                      setg(TELL-FLAG
                        T);
                      crlf();
                      cond((eq_q(member("ECHO"
                              uppercase(.B););
                            .B);
                          tell("The acoustics of the room change subtly."
                            1);
                          setg(ECHO-FLAG!-FLAG
                            T);
                          mapf(<>
                            function((X)
                              #DECL
                                ((X)
                                  OBJECT)
                              cond((trnn(.X
                                    ,ECHO-ROOM-BIT);
                                  trz(.X
                                    ,ECHO-ROOM-BIT);
                                  tro(.X
                                    ,OVISON);)););
                            robjs(.RM););
                          return(T);));));););
              prog(()
                goto(find_room("CHAS3"););
                setg(MOVES
                  _(,MOVES
                    1););
                mapf(<>
                  function((X)
                    #DECL
                      ((X)
                        OBJECT)
                    cond((trnn(.X
                          ,ECHO-ROOM-BIT);
                        trz(.X
                          ,ECHO-ROOM-BIT);
                        tro(.X
                          ,OVISON);)););
                  robjs(.RM););););)););
      define(LEAPER
        ("AUX"
          (RM
            ,HERE)
          (EXITS
            rexits(.RM);)
          M)
        #DECL
          ((RM)
            ROOM
            (EXITS)
            EXIT
            (M)
            or(primtype(VECTOR);
              FALSE);)
        cond((set(M
              memq(DOWN!-WORDS
                .EXITS););
            cond((or(type_q(2(.M);
                    NEXIT);
                  and(type_q(2(.M);
                      CEXIT);
                    not(cxflag(2(.M);););););
                jigs_up(pick_one(,JUMPLOSS););));)
          (tell(pick_one(,WHEEEEE););)););
      define(SKIPPER
        ()
        tell(pick_one(,WHEEEEE);););
      setg(HS
        0);
      gdecl((HS)
        FIX);
      define(HELLO
        ("AUX"
          (PRSOBJ
            2(,PRSVEC);)
          (AMT
            setg(HS
              _(,HS
                1););))
        #DECL
          ((PRSOBJ)
            or(OBJECT
              FALSE);
            (AMT)
            FIX)
        cond((.PRSOBJ
            cond((eq_q(.PRSOBJ
                  find_obj("SAILO"););
                cond((0_q(mod(.AMT
                        20););
                    tell("You seem to be repeating yourself.");)
                  (0_q(mod(.AMT
                        10););
                    tell("I think that phrase is getting a bit worn out.");)
                  (tell("Nothing happens here.");));)
              (eq_q(.PRSOBJ
                  find_obj("AVIAT"););
                tell("Here, nothing happens.");)
              (tell("I think that only schizophrenics say 'Hello' to a "
                  1
                  odesc2(.PRSOBJ);
                  ".");));)
          (tell(pick_one(,HELLOS););)););
      psetg(HELLOS
        '["Hello."
            "Good day."
            "Nice weather we've been having lately"
            "How are you?"
            "Goodbye."]);
      psetg(WHEEEEE
        '["Very good.  Now you can go to the second grade."
            "Have you tried hopping around the dungeon, too?"
            "Are you enjoying yourself?"
            "Wheeeeeeeeee!!!!!"
            "Do you expect me to applaud?"]);
      psetg(JUMPLOSS
        '["You should have looked before you leaped."
            "I'm afraid that leap was a bit much for your weak frame."
            "In the movies, your life would be passing in front of your eyes."
            "Geronimo....."]);
      gdecl((HELLOS
          WHEEEEE
          JUMPLOSS)
        vector([REST
            STRING]););
      define(READER
        ("AUX"
          (PV
            ,PRSVEC)
          (PO
            2(.PV);)
          (PI
            3(.PV);))
        #DECL
          ((PV)
            VECTOR
            (PO)
            OBJECT
            (PI)
            or(FALSE
              OBJECT);)
        cond((not(lit_q(,HERE););
            tell("It is impossible to read in the dark.");)
          (and(.PI
              not(transparent_q(.PI);););
            tell("How does one look through a "
              1
              odesc2(.PI);
              "?");)
          (not(readable_q(.PO););
            tell("How can I read a "
              1
              odesc2(.PO);
              "?");)
          (object_action();)
          (tell(oread(.PO););)););
      define(WELL
        ()
        cond((,RIDDLE-FLAG!-FLAG
            tell("Well what?");)
          (eq_q(,HERE
              find_room("RIDDL"););
            setg(RIDDLE-FLAG!-FLAG
              T);
            tell("There is a clap of thunder and the east door opens.");)
          (tell("Well what?");)););
      define(SINBAD
        ()
        cond((and(eq_q(,HERE
                find_room("CYCLO"););
              memq(find_obj("CYCLO");
                robjs(,HERE);););
            setg(CYCLOPS-FLAG!-FLAG
              T);
            tell("The cyclops, hearing the name of his deadly nemesis, flees the room by knocking down the wall on the north of the room.");
            setg(MAGIC-FLAG!-FLAG
              T);
            remove_object(find_obj("CYCLO"););)
          (tell("Wasn't he a sailor?");)););
      define(GRANITE
        ()
        tell("I think you are taking this thing for granite."););
      psetg(DUMMY
        '["Look around."
            "You think it isn't?"
            "I think you've already done that."]);
      gdecl((DUMMY)
        vector([REST
            STRING]););
      define(BRUSH
        ("AUX"
          (PRSO
            2(,PRSVEC);)
          (PRSI
            3(,PRSVEC);))
        #DECL
          ((PRSO)
            OBJECT
            (PRSI)
            or(OBJECT
              FALSE);)
        cond((eq_q(.PRSO
              find_obj("TEETH"););
            cond((and(eq_q(.PRSI
                    find_obj("PUTTY"););
                  memq(.PRSI
                    aobjs(,WINNER);););
                jigs_up("Well, you seem to have been brushing your teeth with some sort of glue. As a result, your mouth gets glued together (with your nose) and you die of respiratory failure.");)
              (not(.PRSI);
                tell("Dental hygiene is highly recommended, but I'm not sure what you want to brush them with.");)
              (tell("A nice idea, but with a "
                  1
                  odesc2(.PRSI);
                  "?");));)
          (tell("If you wish, but I can't understand why??");)););
      define(RING
        ("AUX"
          (PRSOBJ
            2(,PRSVEC);))
        #DECL
          ((PRSOBJ)
            or(OBJECT
              FALSE);)
        cond((eq_q(.PRSOBJ
              find_obj("BELL"););
            tell("Ding, dong.");)
          (tell("How, exactly, can I ring that?");)););
      define(EAT
        ("AUX"
          (PRSVEC
            ,PRSVEC)
          (EAT?
            <>)
          (DRINK?
            <>)
          (PRSOBJ
            2(.PRSVEC);)
          NOBJ
          (AOBJS
            aobjs(,WINNER);))
        #DECL
          ((PRSOBJ)
            OBJECT
            (NOBJ)
            or(OBJECT
              FALSE);
            (PRSVEC)
            vector([3
                ANY]);
            (AOBJS)
            list([REST
                OBJECT]);
            (EAT?
              DRINK?)
            or(ATOM
              FALSE);)
        cond((object_action();)
          (and(set(EAT?
                edible_q(.PRSOBJ););
              memq(.PRSOBJ
                .AOBJS););
            cond((eq_q(1(.PRSVEC);
                  ,DRINK!-WORDS);
                tell("How can I drink that?");)
              (tell("Thank you very much.  It really hit the spot.");
                put(,WINNER
                  ,AOBJS
                  splice_out(.PRSOBJ
                    .AOBJS););));)
          (and(set(DRINK?
                drinkable_q(.PRSOBJ););
              set(NOBJ
                ocan(.PRSOBJ););
              memq(.NOBJ
                .AOBJS););
            cond((oopen_q(.NOBJ);
                tell("Thank you very much.  I was rather thirsty (from all this talking, probably).");)
              (T
                tell("I'd like to, but I can't get to it.");));
            put(.PRSOBJ
              ,OCAN
              <>);
            put(.NOBJ
              ,OCONTENTS
              splice_out(.PRSOBJ
                ocontents(.NOBJ);););)
          (not(or(.EAT?
                .DRINK?););
            tell("I don't think that the "
              1
              odesc2(.PRSOBJ);
              " would agree with you.");)
          (tell("I think you should get that first.");)););
      define(JARGON
        ()
        tell("Well, FOO, BAR, and BLETCH to you too!"););
      define(CURSES
        ()
        tell(pick_one(,OFFENDED);););
      psetg(OFFENDED
        '["Such language in a high-class establishment like this!"
            "You ought to be ashamed of yourself."
            "Its not so bad.  You could have been killed already."
            "Tough shit, asshole."
            "Oh, dear.  Such language from a supposed winning adventurer!"]);
      gdecl((OFFENDED)
        vector([REST
            STRING]););
      "ROBBER"
      define(ROBBER
        ROBBER
        (HACK
          "AUX"
          (RM
            hroom(.HACK);)
          ROBJ
          (SEEN?
            rseen_q(.RM);)
          (WIN
            ,WINNER)
          (WROOM
            ,HERE)
          (HOBJ
            hobj(.HACK);)
          (STILL
            find_obj("STILL");)
          HERE?
          (HH
            hobjs(.HACK);)
          (TREAS
            find_room("TREAS");))
        #DECL
          ((HACK)
            HACK
            (RM
              WROOM)
            ROOM
            (ROBJ
              HH)
            list([REST
                OBJECT]);
            (SEEN?)
            or(ATOM
              FALSE);
            (WIN)
            ADV
            (HOBJ)
            OBJECT
            (ROBBER)
            ACTIVATION
            (HERE?)
            or(ROOM
              FALSE);
            (STILL)
            OBJECT
            (TREAS)
            ROOM)
        prog(((ONCE
              <>)
            OBJT)
          #DECL
            ((ONCE)
              or(ATOM
                FALSE);
              (OBJT)
              list([REST
                  OBJECT]);)
          cond((set(HERE?
                oroom(.HOBJ););
              set(RM
                .HERE?);));
          set(ROBJ
            robjs(.RM););
          set(OBJT
            .HH);
          cond((and(eq_q(.RM
                  .TREAS);
                neq_q(.RM
                  .WROOM););
              cond((.HERE?
                  cond((eq_q(oroom(.STILL);
                        .TREAS);
                      snarf_object(.HOBJ
                        .STILL);));
                  remove_object(.HOBJ);
                  set(HERE?
                    <>);));
              mapf(<>
                function((X)
                  #DECL
                    ((X)
                      OBJECT)
                  cond((g_q(otval(.X);
                        0);
                      put(.HACK
                        ,HOBJS
                        set(HH
                          splice_out(.X
                            .HH);););
                      insert_object(.X
                        .RM);)););
                .HH);)
            (eq_q(.RM
                .WROOM);
              // Adventurer is in room:  CHOMP, CHOMP
              cond((eq_q(.RM
                    .TREAS);)
                // Don't move, Gertrude
                (not(hflag(.HACK););
                  cond((and(not(.HERE?);
                        prob(30););
                      cond((eq_q(ocan(.STILL);
                            .HOBJ);
                          insert_object(.HOBJ
                            .RM);
                          tell("Someone carrying a large bag is casually leaning against one of the walls here.  He does not speak, but it is clear from his aspect that the bag will be taken only over his dead body.");
                          put(.HACK
                            ,HFLAG
                            T);
                          return(T
                            .ROBBER);));)
                    (and(.HERE?
                        fighting_q(.HOBJ);
                        cond((not(winning_q(.HOBJ
                                .WIN););
                            tell("Your opponent, determining discretion to be the better part of valor, decides to terminate this little contretemps.  With a rueful nod of his head, he steps backward into the gloom and disappears.");
                            remove_object(.HOBJ);
                            trz(.HOBJ
                              ,FIGHTING);
                            snarf_object(.HOBJ
                              .STILL);
                            return(T
                              .ROBBER);)
                          (prob(90);)););)
                    (and(.HERE?
                        prob(30););
                      tell("The holder of the large bag just left, looking disgusted.  Fortunately, he took nothing.");
                      remove_object(.HOBJ);
                      snarf_object(.HOBJ
                        .STILL);
                      return(T
                        .ROBBER);)
                    (prob(70);
                      return(T
                        .ROBBER);)
                    (T
                      cond((memq(.STILL
                            hobjs(.HACK););
                          put(.HACK
                            ,HOBJS
                            splice_out(.STILL
                              hobjs(.HACK);););
                          put(.HOBJ
                            ,OCONTENTS
                            (.STILL));
                          put(.STILL
                            ,OCAN
                            .HOBJ);));
                      put(.HACK
                        ,HOBJS
                        set(HH
                          rob_room(.RM
                            .HH
                            100);););
                      put(.HACK
                        ,HOBJS
                        set(HH
                          rob_adv(.WIN
                            .HH);););
                      put(.HACK
                        ,HFLAG
                        T);
                      cond((and(neq_q(.OBJT
                              .HH);
                            not(.HERE?););
                          tell("A seedy-looking individual with a large bag just wandered through the room.  On the way through, he quietly abstracted all valuables from the room and from your possession, mumbling something about \"Doing unto others before..\"");)
                        (.HERE?
                          snarf_object(.HOBJ
                            .STILL);
                          cond((neq_q(.OBJT
                                .HH);
                              tell("The other occupant just left, still carrying his large bag.  You may not have noticed that he robbed you blind first.");)
                            (tell("The other occupant (he of the large bag), finding nothing of value, left disgusted.");));
                          remove_object(.HOBJ);
                          set(HERE?
                            <>);)
                        (T
                          tell("A 'lean and hungry' gentleman just wandered through.  Finding nothing of value, he left disgruntled.");));));)
                (T
                  cond((.HERE?
                      // Here, already announced.
                      cond((prob(30);
                          put(.HACK
                            ,HOBJS
                            set(HH
                              rob_room(.RM
                                .HH
                                100);););
                          put(.HACK
                            ,HOBJS
                            set(HH
                              rob_adv(.WIN
                                .HH);););
                          cond((memq(find_obj("ROPE");
                                .HH);
                              setg(DOME-FLAG!-FLAG
                                <>);));
                          cond((eq_q(.OBJT
                                .HH);
                              tell("The other occupant (he of the large bag), finding nothing of value, left disgusted.");)
                            (T
                              tell("The other occupant just left, still carrying his large bag.  You may not have noticed that he robbed you blind first.");));
                          remove_object(.HOBJ);
                          set(HERE?
                            <>);
                          snarf_object(.HOBJ
                            .STILL);)
                        (return(T
                            .ROBBER);));));));)
            (and(memq(.HOBJ
                  robjs(.RM););
                // Leave if victim left
                snarf_object(.HOBJ
                  .STILL);
                remove_object(.HOBJ);
                set(HERE?
                  <>););)
            (and(eq_q(oroom(.STILL);
                  .RM);
                snarf_object(.HOBJ
                  .STILL);
                <>);)
            (.SEEN?
              // Hack the adventurer's belongings
              put(.HACK
                ,HOBJS
                set(HH
                  rob_room(.RM
                    .HH
                    75);););
              cond((and(eq_q(rdesc2(.RM);
                      ,MAZEDESC);
                    eq_q(rdesc2(.WROOM);
                      ,MAZEDESC););
                  mapf(<>
                    function((X)
                      #DECL
                        ((X)
                          OBJECT)
                      cond((and(can_take_q(.X);
                            ovis_q(.X);
                            prob(40););
                          tell("You hear, off in the distance, someone saying \"My, I wonder what this fine "
                            3
                            odesc2(.X);
                            " is doing here.\"");
                          tell(""
                            1);
                          cond((prob(60);
                              remove_object(.X);
                              put(.X
                                ,OTOUCH?
                                T);
                              put(.HACK
                                ,HOBJS
                                set(HH
                                  (.X
                                    !.HH)););));
                          mapleave();)););
                    robjs(.RM););)
                (mapf(<>
                    function((X)
                      #DECL
                        ((X)
                          OBJECT)
                      cond((and(0_q(otval(.X););
                            can_take_q(.X);
                            ovis_q(.X);
                            prob(20););
                          remove_object(.X);
                          put(.X
                            ,OTOUCH?
                            T);
                          put(.HACK
                            ,HOBJS
                            set(HH
                              (.X
                                !.HH)););
                          cond((eq_q(.RM
                                .WROOM);
                              tell("You suddenly notice that the "
                                1
                                odesc2(.X);
                                " vanished.");));
                          mapleave();)););
                    robjs(.RM););
                  cond((memq(find_obj("ROPE");
                        .HH);
                      setg(DOME-FLAG!-FLAG
                        <>);));));));
          cond((set(ONCE
                not(.ONCE););
              // Move to next room, and hack.
              prog(((ROOMS
                    hrooms(.HACK);))
                set(RM
                  1(.ROOMS););
                cond((empty_q(set(ROOMS
                        rest(.ROOMS);););
                    set(ROOMS
                      ,ROOMS);));
                cond((rtrnn(.RM
                      ,RSACREDBIT);
                    // Can I work here?
                    again();));
                put(.HACK
                  ,HROOM
                  .RM);
                put(.HACK
                  ,HFLAG
                  <>);
                put(.HACK
                  ,HROOMS
                  .ROOMS);
                set(SEEN?
                  rseen_q(.RM);););
              again();)););
        // Drop worthless cruft, sometimes
        or(eq_q(.RM
            .TREAS);
          mapf(<>
            function((X)
              #DECL
                ((X)
                  OBJECT)
              cond((and(0_q(otval(.X););
                    prob(30););
                  put(.HACK
                    ,HOBJS
                    set(HH
                      splice_out(.X
                        .HH);););
                  insert_object(.X
                    .RM);
                  and(eq_q(.RM
                      .WROOM);
                    tell("The robber, rummaging through his bag, dropped a few items he found valueless."););)););
            .HH);););
      define(SNARF-OBJECT
        (WHO
          WHAT)
        #DECL
          ((WHO
              WHAT)
            OBJECT)
        cond((and(neq_q(ocan(.WHAT);
                .WHO);
              or(oroom(.WHAT);
                ocan(.WHAT);););
            remove_object(.WHAT);
            put(.WHAT
              ,OCAN
              .WHO);
            put(.WHO
              ,OCONTENTS
              (.WHAT
                !
                ocontents(.WHO);));)
          (.WHO)););
      define(ROBBER-FUNCTION
        ("AUX"
          (PRSACT
            1(,PRSVEC);)
          (DEM
            get_demon("THIEF");)
          (PV
            ,PRSVEC)
          (PRSOBJ
            2(.PV);)
          (HERE
            ,HERE)
          (FLG
            <>)
          BRICK
          FUSE
          ST
          F
          (T
            hobj(.DEM);)
          (CHALI
            find_obj("CHALI");))
        #DECL
          ((PV)
            VECTOR
            (DEM)
            HACK
            (PRSACT)
            VERB
            (PRSOBJ)
            or(OBJECT
              FALSE);
            (CHALI
              T
              HOBJ
              ST
              BRICK
              FUSE)
            OBJECT
            (F)
            vector(ANY
              CEVENT);
            (HERE)
            ROOM
            (FLG)
            or(ATOM
              FALSE);)
        cond((eq_q(.PRSACT
              ,FIGHT!-WORDS);
            cond((eq_q(ocan(set(ST
                      find_obj("STILL");););
                  .T);
                <>)
              (eq_q(oroom(.ST);
                  .HERE);
                snarf_object(.T
                  .ST);
                tell("The robber, somewhat surprised at this turn of events, nimbly retrieves his stilletto.");
                T)
              (ELSE
                tell("Annoyed to be left unarmed in such an obviously dangerous neighborhood, the thief slips off into the shadows.");
                tro(.CHALI
                  ,TAKEBIT);
                remove_object(.T);));)
          (eq_q(.PRSACT
              ,DEAD\!!-WORDS);
            cond((not(empty_q(hobjs(.DEM);););
                tell("  His booty remains.");
                mapf(<>
                  function((X)
                    #DECL
                      ((X)
                        OBJECT)
                    insert_object(.X
                      .HERE);
                    tro(.X
                      ,ECHO-ROOM-BIT););
                  hobjs(.DEM););
                put(.DEM
                  ,HOBJS
                  ());));
            tro(.CHALI
              ,TAKEBIT);
            cond((eq_q(.HERE
                  find_room("TREAS"););
                mapf(<>
                  function((X)
                    #DECL
                      ((X)
                        OBJECT)
                    cond((and(neq_q(.X
                            .CHALI);
                          neq_q(.X
                            .T););
                        cond((trnn(.X
                              ,ECHO-ROOM-BIT);
                            trz(.X
                              ,ECHO-ROOM-BIT);)
                          (tro(.X
                              ,OVISON);
                            cond((not(.FLG);
                                set(FLG
                                  T);
                                tell("As the thief dies, the power of his magic decreases, and his treasures reappear:"
                                  2);));
                            tell("  A "
                              2
                              odesc2(.X););));)););
                  robjs(.HERE););));
            put(.DEM
              ,HACTION
              <>);)
          (eq_q(.PRSACT
              ,FIRST?!-WORDS);
            prob(20);)
          (eq_q(.PRSACT
              ,OUT\!!-WORDS);
            put(.DEM
              ,HACTION
              <>);
            trz(find_obj("STILL");
              ,OVISON);
            tro(.CHALI
              ,TAKEBIT);
            put(.T
              ,ODESC1
              ,ROBBER-U-DESC);)
          (eq_q(.PRSACT
              ,IN\!!-WORDS);
            cond((eq_q(hroom(.DEM);
                  .HERE);
                tell("The robber revives, briefly feigning continued unconsciousness, and when he sees his moment, scrambles away from you.");));
            cond((type_q(,ROBBER
                  OFFSET);
                put(.DEM
                  ,HACTION
                  ROBBER);)
              (put(.DEM
                  ,HACTION
                  ROBBER);));
            put(.T
              ,ODESC1
              ,ROBBER-C-DESC);
            cond((and(eq_q(.HERE
                    find_room("TREAS"););
                  oroom(set(CHALI
                      .CHALI);););
                trz(.CHALI
                  ,TAKEBIT);));
            tro(find_obj("STILL");
              ,OVISON);)
          (and(type_q(.PRSOBJ
                OBJECT);
              eq_q(2(.PV);
                ,KNIFE!-OBJECTS);
              eq_q(vname(.PRSACT);
                THROW!-WORDS);
              not(trnn(.T
                  ,FIGHTBIT);););
            cond((prob(10);
                tell("You evidently frightened the robber, though you didn't hit him.  He flees"
                  1
                  cond((empty_q(hobjs(.DEM););
                      ".")
                    (T
                      mapf(<>
                        function((X)
                          #DECL
                            ((X)
                              OBJECT)
                          insert_object(.X
                            .HERE););
                        hobjs(.DEM););
                      put(.DEM
                        ,HOBJS
                        ());
                      ", but the contents of his bag fall on the floor.")););
                remove_object(.T);)
              (T
                tell("You missed.  The thief makes no attempt to take the knife, though it would be a fine addition to the collection in his bag.  He does seem angered by your attempt.");
                tro(.T
                  ,FIGHTBIT);));)
          (and(or(eq_q(.PRSACT
                  ,THROW!-WORDS);
                eq_q(.PRSACT
                  ,GIVE!-WORDS););
              type_q(.PRSOBJ
                OBJECT);
              neq_q(.PRSOBJ
                hobj(.DEM);););
            cond((l_q(ocapac(.T);
                  0);
                put(.T
                  ,OCAPAC
                  _(ocapac(.T);););
                put(.DEM
                  ,HACTION
                  cond((type_q(,ROBBER
                        OFFSET);
                      ,ROBBER)
                    (ROBBER)););
                tro(find_obj("STILL");
                  ,OVISON);
                put(.T
                  ,ODESC1
                  ,ROBBER-C-DESC);
                tell("Your proposed victim suddenly recovers consciousness.");));
            cond((and(eq_q(.PRSOBJ
                    set(BRICK
                      find_obj("BRICK");););
                  eq_q(ocan(set(FUSE
                        find_obj("FUSE");););
                    .BRICK);
                  orand(.FUSE);
                  not(0_q(ctick(2(set(F
                            orand(.FUSE);););););););
                // I.e., he's trying to give us the brick with a lighted fuse.
                tell("The thief seems rather offended by your offer.  Do you think he's as stupid as you are?");)
              (remove_object(.PRSOBJ);
                put(.DEM
                  ,HOBJS
                  (.PRSOBJ
                    !
                    hobjs(.DEM);));
                tell("The thief places the "
                  1
                  odesc2(.PRSOBJ);
                  " in his bag and thanks you politely.");));)
          (and(.PRSACT
              eq_q(vname(.PRSACT);
                TAKE!-WORDS););
            tell("Once you got him, what would you do with him?");)););
      define(CHALICE
        ("AUX"
          (PRSA
            1(,PRSVEC);)
          (CH
            2(,PRSVEC);)
          TR
          T)
        #DECL
          ((PRSA)
            VERB
            (CH)
            OBJECT
            (TR)
            ROOM
            (T)
            OBJECT)
        cond((eq_q(.PRSA
              ,TAKE!-WORDS);
            cond((and(not(ocan(.CH););
                  eq_q(oroom(.CH);
                    set(TR
                      find_room("TREAS");););
                  eq_q(oroom(set(T
                        find_obj("THIEF");););
                    .TR);
                  fighting_q(.T);
                  haction(,ROBBER-DEMON););
                tell("Realizing just in time that you'd be stabbed in the back if you attempted to take the chalice, you return to the fray.");));)););
      define(BURNER
        ("AUX"
          (PV
            ,PRSVEC)
          (PRSO
            2(.PV);)
          (PRSI
            3(.PV);))
        #DECL
          ((PV)
            VECTOR
            (PRSO
              PRSI)
            OBJECT)
        cond((flaming_q(.PRSI);
            cond((object_action();)
              (and(eq_q(avehicle(,WINNER);
                    find_obj("BALLO"););
                  balloon(););)
              (and(burnable_q(.PRSO);
                  cond((memq(.PRSO
                        aobjs(,WINNER););
                      tell("The "
                        1
                        odesc2(.PRSO);
                        " catches fire.");
                      jigs_up("Unfortunately, you were holding it at the time.");)
                    (hackable_q(.PRSO
                        ,HERE);
                      tell("The "
                        1
                        odesc2(.PRSO);
                        " catches fire and is consumed.");
                      remove_object(.PRSO);)
                    (tell("You don't have that.");)););)
              (tell("I don't think you can burn a "
                  1
                  odesc2(.PRSO);
                  ".");));)
          (tell("With a "
              1
              odesc2(.PRSI);
              "??!?");)););
      define(TURNER
        ("AUX"
          (PV
            ,PRSVEC)
          (PRSO
            2(.PV);)
          (PRSI
            3(.PV);))
        #DECL
          ((PV)
            VECTOR
            (PRSO
              PRSI)
            OBJECT)
        cond((trnn(.PRSO
              ,TURNBIT);
            cond((trnn(.PRSI
                  ,TOOLBIT);
                object_action();)
              (tell("You certainly can't turn it with a "
                  1
                  odesc2(.PRSI);
                  ".");));)
          (tell("You can't turn that!");)););
      psetg(DOORMUNGS
        '["The door is invulnerable."
            "You cannot damage this door."
            "The door is still under warranty."]);
      gdecl((DOORMUNGS)
        vector([REST
            STRING]););
      define(DDOOR-FUNCTION
        ("AUX"
          (PA
            1(,PRSVEC);))
        #DECL
          ((PA)
            VERB)
        cond((eq_q(.PA
              ,OPEN!-WORDS);
            tell("The door cannot be opened.");)
          (eq_q(.PA
              ,BURN!-WORDS);
            tell("You cannot burn this door.");)
          (eq_q(.PA
              ,MUNG!-WORDS);
            tell(pick_one(,DOORMUNGS););)););
      define(INFLATER
        ("AUX"
          (PRSI
            2(,PRSVEC);)
          (PRSO
            3(,PRSVEC);))
        #DECL
          ((PRSI
              PRSO)
            OBJECT)
        cond((eq_q(.PRSI
              find_obj("IBOAT"););
            cond((eq_q(.PRSO
                  find_obj("PUMP"););
                object_action();)
              (tell("You would inflate it with that?");));)
          (eq_q(.PRSI
              find_obj("RBOAT"););
            tell("Inflating it further would probably burst it.");)
          (tell("How can you inflate that?");)););
      define(DEFLATER
        ("AUX"
          (PRSO
            2(,PRSVEC);))
        #DECL
          ((PRSO)
            OBJECT)
        cond((eq_q(.PRSO
              find_obj("RBOAT"););
            object_action();)
          (tell("Come on, now!");)););
      define(LOCKER
        ("AUX"
          (PRSO
            2(,PRSVEC);))
        #DECL
          ((PRSO)
            OBJECT)
        cond((eq_q(.PRSO
              find_obj("GRAT2"););
            setg(GRUNLOCK!-FLAG
              <>);
            tell("The grate is locked.");
            mapf(<>
              function((X)
                #DECL
                  ((X)
                    or(CEXIT
                      NEXIT
                      ROOM);)
                cond((and(type_q(.X
                        CEXIT);
                      eq_q(cxflag(.X);
                        KEY-FLAG!-FLAG););
                    put(.X
                      ,CXSTR
                      "The grate is locked.");
                    mapleave();)););
              rexits(,HERE););)
          (tell("It doesn't seem to work.");)););
      define(UNLOCKER
        ("AUX"
          (PRSO
            2(,PRSVEC);)
          (PRSI
            3(,PRSVEC);)
          (R
            find_room("MGRAT");))
        #DECL
          ((PRSO
              PRSI)
            OBJECT
            (R)
            ROOM)
        cond((eq_q(.PRSO
              find_obj("GRAT2"););
            cond((eq_q(.PRSI
                  find_obj("KEYS"););
                setg(GRUNLOCK!-FLAG
                  T);
                tell("The grate is unlocked.");
                mapf(<>
                  function((X)
                    #DECL
                      ((X)
                        or(CEXIT
                          NEXIT
                          ROOM);)
                    cond((and(type_q(.X
                            CEXIT);
                          eq_q(cxflag(.X);
                            KEY-FLAG!-FLAG););
                        put(.X
                          ,CXSTR
                          "The grate is closed.");
                        mapleave();)););
                  rexits(.R););)
              (tell("Can you unlock a grating with a "
                  1
                  odesc2(.PRSI);
                  "?");));)
          (tell("It doesn't seem to work.");)););
      define(KILLER
        ("AUX"
          (PV
            ,PRSVEC)
          (PRSO
            2(.PV);)
          (PRSI
            3(.PV);))
        #DECL
          ((PV)
            VECTOR
            (PRSO
              PRSI)
            or(FALSE
              OBJECT);)
        cond((not(.PRSO);
            tell("There is nothing here to kill.");)
          (not(.PRSI);
            tell("Trying to kill a "
              1
              odesc2(.PRSO);
              " with your bare hands is suicidal.");)
          (not(trnn(.PRSI
                ,WEAPONBIT););
            tell("Trying to kill a "
              0
              odesc2(.PRSO);
              " with a ");
            tell(odesc2(.PRSI);
              1
              " is suicidal.");)
          (ELSE
            blow(,PLAYER
              .PRSO
              orand(.PRSI);
              T
              <>);)););
      define(ATTACKER
        ("AUX"
          (PV
            ,PRSVEC)
          (PRSO
            2(.PV);)
          (PRSI
            3(.PV);))
        #DECL
          ((PV)
            VECTOR
            (PRSO
              PRSI)
            or(FALSE
              OBJECT);)
        cond((not(.PRSO);
            tell("There is nothing here to attack.");)
          (not(.PRSI);
            tell("Attacking a "
              1
              odesc2(.PRSO);
              " with your bare hands is suicidal.");)
          (not(trnn(.PRSI
                ,WEAPONBIT););
            tell("Attacking a "
              0
              odesc2(.PRSO);
              " with a ");
            tell(odesc2(.PRSI);
              1
              " is suicidal.");)
          (ELSE
            blow(,PLAYER
              .PRSO
              orand(.PRSI);
              T
              <>);)););
      define(SWINGER
        ("AUX"
          (PV
            ,PRSVEC)
          (PRSO
            2(.PV);)
          (PRSI
            3(.PV);))
        #DECL
          ((PV)
            VECTOR
            (PRSO
              PRSI)
            or(FALSE
              OBJECT);)
        put(.PV
          2
          .PRSI);
        put(.PV
          3
          .PRSO);
        attacker(););
      define(HACK-HACK
        (OBJ
          STR
          "OPTIONAL"
          (OBJ2
            <>))
        #DECL
          ((OBJ)
            OBJECT
            (STR)
            STRING
            (OBJ2)
            or(FALSE
              STRING);)
        cond((object_action();)
          (.OBJ2
            tell(.STR
              0
              odesc2(.OBJ);
              " with a ");
            tell(.OBJ2
              1
              pick_one(,HO-HUM););)
          (ELSE
            tell(.STR
              1
              odesc2(.OBJ);
              pick_one(,HO-HUM););)););
      psetg(HO-HUM
        '[" does not seem to do anything."
            " is not notably useful."
            " isn't very interesting."
            " doesn't appear worthwhile."
            " has no effect."
            " doesn't do anything."]);
      gdecl((HO-HUM)
        vector([REST
            STRING]););
      define(MUNGER
        ("AUX"
          (PRSO
            2(,PRSVEC);)
          (PRSW
            3(,PRSVEC);))
        #DECL
          ((PRSW)
            or(OBJECT
              FALSE);
            (PRSO)
            OBJECT)
        cond((trnn(.PRSO
              ,VILLAIN);
            cond((.PRSW
                cond((trnn(.PRSW
                      ,WEAPONBIT);
                    blow(,PLAYER
                      .PRSO
                      orand(.PRSW);
                      T
                      <>);)
                  (T
                    tell("Munging a "
                      0
                      odesc2(.PRSO);
                      " with a ");
                    tell(odesc2(.PRSW);
                      1
                      " is quite self-destructive.");));)
              (T
                tell("Munging a "
                  1
                  odesc2(.PRSO);
                  " with your bare hands is suicidal.");));)
          (hack_hack(.PRSO
              "Munging a ");)););
      define(KICKER
        ("AUX"
          (PRSO
            2(,PRSVEC);))
        #DECL
          ((PRSO)
            OBJECT)
        hack_hack(.PRSO
          "Munging a "););
      define(WAVER
        ("AUX"
          (PRSO
            2(,PRSVEC);))
        #DECL
          ((PRSO)
            OBJECT)
        hack_hack(.PRSO
          "Waving a "););
      define(R/L
        ("AUX"
          (PRSO
            2(,PRSVEC);))
        #DECL
          ((PRSO)
            OBJECT)
        hack_hack(.PRSO
          "Playing in this way with a "););
      define(RUBBER
        ("AUX"
          (PRSO
            2(,PRSVEC);))
        #DECL
          ((PRSO)
            OBJECT)
        hack_hack(.PRSO
          "Fiddling with a "););
      define(EXORCISE
        ()
        cond((object_action();)
          (T)););
      define(PLUGGER
        ()
        cond((object_action();)
          (tell("This has no effect.");)););
      define(UNTIE
        ("AUX"
          (PRSO
            2(,PRSVEC);))
        #DECL
          ((PRSO)
            OBJECT)
        cond((object_action();)
          (trnn(.PRSO
              ,TIEBIT);
            tell("I don't think so.");)
          (tell("This cannot be tied, so it cannot be untied!");)););
      define(PUSHER
        ("AUX"
          (PRSO
            2(,PRSVEC);))
        #DECL
          ((PRSO)
            OBJECT)
        cond((object_action();)
          (memq(BUTTO!-OBJECTS
              onames(.PRSO););)
          (hack_hack(.PRSO
              "Pushing the ");)););
      define(TIE
        ("AUX"
          (PRSO
            2(,PRSVEC);))
        #DECL
          ((PRSO)
            OBJECT)
        cond((trnn(.PRSO
              ,TIEBIT);
            cond((object_action();)
              (tell("You can't tie it to that.");));)
          (tell("How can you tie that to anything.");)););
      define(MELTER
        ("AUX"
          (PRSO
            2(,PRSVEC);))
        #DECL
          ((PRSO)
            OBJECT)
        cond((object_action();)
          (tell("I'm not sure that a "
              1
              odesc2(.PRSO);
              " can be melted.");)););
      setg(ON-POLE!-FLAG
        <>);
      define(BODY-FUNCTION
        ("AUX"
          (PRSA
            1(,PRSVEC);))
        #DECL
          ((PRSA)
            VERB)
        cond((eq_q(.PRSA
              ,TAKE!-WORDS);
            tell("A force keeps you from taking the bodies.");)
          (or(eq_q(.PRSA
                ,MUNG!-WORDS);
              eq_q(.PRSA
                ,BURN!-WORDS););
            cond((,ON-POLE!-FLAG)
              (setg(ON-POLE!-FLAG
                  T);
                insert_object(find_obj("HPOLE");
                  find_room("LLD2"););));
            jigs_up("The voice of the guardian of the dungeon booms out from the darkness  'Your disrespect costs you your life!' and places your head on a pole.");)););
      define(MUMBLER
        ()
        tell("You'll have to speak up if you expect me to hear you!"););
      define(ALARM
        ("AUX"
          (PRSO
            2(,PRSVEC);))
        #DECL
          ((PRSO)
            OBJECT)
        cond((trnn(.PRSO
              ,SLEEPBIT);
            object_action();)
          (tell("The "
              1
              odesc2(.PRSO);
              " isn't sleeping.");)););
      define(ZORK
        ()
        tell("That word is replaced henceforth with DUNGEON."););
      define(DUNGEON
        ()
        tell("At your service!"););
      define(PAINTING
        ("AUX"
          (PRSA
            1(,PRSVEC);)
          (ART
            2(,PRSVEC);))
        #DECL
          ((PRSA)
            VERB
            (ART)
            OBJECT)
        cond((eq_q(.PRSA
              ,MUNG!-WORDS);
            put(.ART
              ,OTVAL
              0);
            put(.ART
              ,ODESC2
              "worthless piece of canvas");
            put(.ART
              ,ODESC1
              "There is a worthless piece of canvas here.");
            tell("Congratulations!  Unlike the other vandals, who merely stole the artist's masterpieces, you have destroyed one.");)););
      psetg(DIMMER
        "The lamp appears to be getting dimmer.");
      psetg(LAMP-TICKS
        [50
          30
          20
          10
          4
          0]);
      psetg(LAMP-TELLS
        [,DIMMER
          ,DIMMER
          ,DIMMER
          ,DIMMER
          "The lamp is dying."]);
      define(LANTERN
        ("AUX"
          (PV
            ,PRSVEC)
          (VERB
            1(.PV);)
          (HERE
            ,HERE)
          (RLAMP
            find_obj("LAMP");)
          FOO)
        #DECL
          ((PV)
            VECTOR
            (VERB)
            VERB
            (HERE)
            ROOM
            (RLAMP)
            OBJECT
            (FOO)
            vector(ANY
              CEVENT);)
        cond((eq_q(.VERB
              ,THROW!-WORDS);
            tell("The lamp has smashed into the floor and the light has gone out.");
            remove_object(find_obj("LAMP"););
            insert_object(find_obj("BLAMP");
              .HERE);)
          (eq_q(.VERB
              ,C-INT!-WORDS);
            light_int(.RLAMP
              ,LNTIN
              ,LAMP-TICKS
              ,LAMP-TELLS);)
          (eq_q(.VERB
              ,TURN-ON!-WORDS);
            clock_enable(2(set(FOO
                  orand(.RLAMP););););
            <>)
          (eq_q(.VERB
              ,TURN-OFF!-WORDS);
            clock_disable(2(set(FOO
                  orand(.RLAMP););););
            <>)););
      define(SWORD-GLOW
        (DEM
          "AUX"
          (SW
            hobj(.DEM);)
          (G
            otval(.SW);)
          (HERE
            ,HERE)
          (NG
            0))
        #DECL
          ((DEM)
            HACK
            (SW)
            OBJECT
            (NG
              G)
            FIX
            (HERE)
            ROOM)
        cond((and(not(oroom(.SW););
              not(ocan(.SW););
              memq(.SW
                aobjs(,PLAYER);););
            cond((infested_q(.HERE);
                set(NG
                  2);)
              (mapf(<>
                  function((E)
                    #DECL
                      ((E)
                        or(ROOM
                          CEXIT
                          NEXIT
                          ATOM);)
                    cond((type_q(.E
                          ROOM);
                        and(infested_q(.E);
                          mapleave(T););)
                      (type_q(.E
                          CEXIT);
                        and(infested_q(2(.E););
                          mapleave(T););)););
                  rexits(.HERE););
                set(NG
                  1);));
            cond((eq_q(.NG
                  .G);)
              (eq_q(.NG
                  2);
                tell("Your sword has begun to glow very brightly.");)
              (1_q(.NG);
                tell("Your sword is glowing with a faint blue glow.");)
              (0_q(.NG);
                tell("Your sword is no longer glowing.");));
            put(.SW
              ,OTVAL
              .NG);)
          (put(.DEM
              ,HACTION
              <>);)););
      define(SWORD
        ("AUX"
          (PA
            1(,PRSVEC);))
        #DECL
          ((PA)
            VERB)
        cond((and(eq_q(.PA
                ,TAKE!-WORDS);
              eq_q(,WINNER
                ,PLAYER););
            put(,SWORD-DEMON
              ,HACTION
              cond((type_q(,SWORD-GLOW
                    OFFSET);
                  ,SWORD-GLOW)
                (SWORD-GLOW)););
            <>)););
      define(INFESTED?
        (R
          "AUX"
          (VILLAINS
            ,VILLAINS)
          (DEM
            get_demon("THIEF");))
        #DECL
          ((R)
            ROOM
            (VILLAINS)
            list([REST
                OBJECT]);
            (DEM)
            HACK)
        or(and(eq_q(.R
              hroom(.DEM););
            haction(.DEM););
          mapf(<>
            function((V)
              #DECL
                ((V)
                  OBJECT)
              cond((eq_q(.R
                    oroom(.V););
                  mapleave(T);)););
            .VILLAINS);););
      psetg(CDIMMER
        "The candles grow shorter.");
      psetg(CANDLE-TICKS
        [20
          10
          5
          0]);
      psetg(CANDLE-TELLS
        [,CDIMMER
          ,CDIMMER
          "The candles are very short."]);
      define(MATCH-FUNCTION
        ("AUX"
          (PRSA
            1(,PRSVEC);)
          (PRSO
            2(,PRSVEC);)
          (MATCH
            find_obj("MATCH");)
          (MC
            orand(.MATCH);))
        #DECL
          ((PRSA)
            VERB
            (MATCH)
            OBJECT
            (MC)
            FIX)
        cond((and(eq_q(.PRSA
                ,LIGHT!-WORDS);
              eq_q(.PRSO
                .MATCH););
            cond((and(put(.MATCH
                    ,ORAND
                    set(MC
                      _(.MC
                        1);););
                  l__q(.MC
                    0););
                tell("I'm afraid that you have run out of matches.");)
              (tro(.MATCH
                  ,FLAMEBIT);
                put(.MATCH
                  ,OLIGHT?
                  1);
                clock_int(,MATIN
                  2);
                tell("One of the matches starts to burn.");));)
          (and(eq_q(.PRSA
                ,TURN-OFF!-WORDS);
              1_q(olight_q(.MATCH);););
            tell("The match is out.");
            trz(.MATCH
              ,FLAMEBIT);
            put(.MATCH
              ,OLIGHT?
              0);
            clock_int(,MATIN
              0);
            T)
          (eq_q(.PRSA
              ,C-INT!-WORDS);
            tell("The match has gone out.");
            trz(.MATCH
              ,FLAMEBIT);
            put(.MATCH
              ,OLIGHT?
              0);)););
      define(CANDLES
        ("AUX"
          (PRSACT
            1(,PRSVEC);)
          (C
            find_obj("CANDL");)
          (WINNER
            ,WINNER)
          (AO
            aobjs(.WINNER);)
          (W
            3(,PRSVEC);)
          MATCH
          FOO
          ORPHANS)
        #DECL
          ((PRSACT)
            VERB
            (MATCH
              C)
            OBJECT
            (W)
            or(FALSE
              OBJECT);
            (WINNER)
            ADV
            (AO)
            list([REST
                OBJECT]);
            (FOO)
            vector(FIX
              CEVENT);
            (ORPHANS)
            vector([4
                ANY]);)
        or(orand(.C);
          put(.C
            ,ORAND
            [0
              clock_int(,CNDIN
                50);]););
        set(FOO
          orand(.C););
        cond((eq_q(.PRSACT
              ,LIGHT!-WORDS);
            cond((0_q(olight_q(.C););
                tell("Alas, there's not much left of the candles.  Certainly not enough to burn.");)
              (not(.W);
                tell("With what?");
                put(set(ORPHANS
                    ,ORPHANS);
                  ,OFLAG
                  T);
                put(.ORPHANS
                  ,OVERB
                  .PRSACT);
                put(.ORPHANS
                  ,OSLOT1
                  .C);
                put(.ORPHANS
                  ,OPREP
                  chtype(WITH!-WORDS
                    PREP););
                setg(PARSE-WON
                  <>);
                T)
              (and(eq_q(.W
                    set(MATCH
                      find_obj("MATCH");););
                  1_q(olight_q(.MATCH);););
                cond((1_q(olight_q(.C););
                    tell("The candles are already lighted.");)
                  (put(.C
                      ,OLIGHT?
                      1);
                    tell("The candles are lighted.");
                    clock_enable(2(.FOO););));)
              (eq_q(.W
                  find_obj("TORCH"););
                cond((1_q(olight_q(.C););
                    tell("You realize, just in time, that the candles are already lighted.");)
                  (tell("The heat from the torch is so intense that the candles are vaporised.");
                    cond((or(oroom(.C);
                          ocan(.C););
                        remove_object(.C);)
                      (put(.WINNER
                          ,AOBJS
                          splice_out(.C
                            .AO););));));)
              (tell("You have to light them with something that's burning, you know.");));)
          (eq_q(.PRSACT
              ,TURN-OFF!-WORDS);
            clock_disable(2(.FOO););
            cond((1_q(olight_q(.C););
                tell("The flame is extinguished.");
                put(.C
                  ,OLIGHT?
                  -1);)
              (tell("The candles are not lighted.");));)
          (eq_q(.PRSACT
              ,C-INT!-WORDS);
            light_int(.C
              ,CNDIN
              ,CANDLE-TICKS
              ,CANDLE-TELLS);)););
      define(BLACK-BOOK
        ("AUX"
          (PV
            ,PRSVEC)
          (V
            1(.PV);)
          (B
            2(.PV);))
        #DECL
          ((PV)
            vector([3
                ANY]);
            (B)
            OBJECT
            (V)
            VERB)
        cond((eq_q(.V
              ,BURN!-WORDS);
            cond((oroom(.B);
                remove_object(.B);)
              (drop_object(.B);));
            jigs_up("A booming voice says 'Wrong, cretin!' and you notice that you have turned into a pile of dust.");)););
      define(LIGHT-INT
        (OBJ
          CEV
          TICK
          TELL
          "AUX"
          CNT
          TIM
          (FOO
            orand(.OBJ);))
        #DECL
          ((OBJ)
            OBJECT
            (FCN)
            APPLICABLE
            (TICK)
            vector([REST
                FIX]);
            (TELL)
            vector([REST
                STRING]);
            (TIM
              CNT)
            FIX
            (FOO)
            vector(FIX
              CEVENT);)
        put(.FOO
          1
          set(CNT
            _(1(.FOO);
              1);););
        clock_int(.CEV
          set(TIM
            nth(.TICK
              .CNT);););
        cond((0_q(.TIM);
            cond((or(not(oroom(.OBJ););
                  eq_q(oroom(.OBJ);
                    ,HERE););
                tell("I hope you have more light than from a "
                  1
                  odesc2(.OBJ);
                  ".");));
            put(.OBJ
              ,OLIGHT?
              0);)
          (or(not(oroom(.OBJ););
              eq_q(oroom(.OBJ);
                ,HERE););
            tell(nth(.TELL
                .CNT););)););
      define(HACKABLE?
        (OBJ
          RM
          "AUX"
          (AV
            avehicle(,WINNER);))
        #DECL
          ((OBJ)
            OBJECT
            (RM)
            ROOM
            (AV)
            or(FALSE
              OBJECT);)
        cond((.AV
            search_list(oid(.OBJ);
              ocontents(.AV);
              <>);)
          (search_list(oid(.OBJ);
              robjs(.RM);
              <>);)););)););